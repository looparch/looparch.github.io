{"version":3,"sources":["webpack:///./src/components/md-product-preview.js","webpack:///./src/templates/manufacturer-post.js","webpack:///./src/components/SEOProduct/generateMarkdownProductJSONLD.js"],"names":["MdProductPreviewTemplate","props","render","product","this","post","description","title","VariableImage","image","image_primary","childImageSharp","gatsbyImageData","alt","className","slug","id","to","hrefLang","rel","truncate","React","Component","ManufacturerPostTemplate","groupedProducts","data","allMarkdownRemark","firstGroup","slice","localProductGroups","uniqueProductGroups","map","productGroup","groupName","titleCase","fieldValue","replace","push","name","anchor","Set","state","windowHeight","productGroups","iterableGroups","scrollToId","e","console","log","stopPropagation","el","document","getElementById","height","window","scrollTo","offsetLeft","offsetTop","offsetHeight","componentDidMount","setState","siteMetadata","site","siteTitle","contentfulManufacturer","manufacturers","allContentfulManufacturer","edges","Helmet","pageSEO","pagePath","postNode","location","logoImageDark","heroImage","dangerouslySetInnerHTML","__html","childMarkdownRemark","html","href","url","target","node","iterator","key","onClick","style","position","top","background","zIndex","display","nodes","fm","frontmatter","generateMarkdownProductJSONLD","path","pathname","padding","section","recaptchaKey","manufacturer","siteUrl","getSrc","unescape","sku","mpn","review","reviewRating","ratingValue","bestRating","author","publisher","aggregateRating","reviewCount","brand","logo","offers","price","priceCurrency","priceValidUntil","availability"],"mappings":"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","file":"component---src-templates-manufacturer-post-js-83ce3f9270cb85c286f6.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { truncate } from 'voca'\n\nimport styles from './product-preview.sass'\n\nclass MdProductPreviewTemplate extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const product = this.props.product\n    const post = this.props.post\n\n    const description = product.description || product.title\n\n    const VariableImage = (\n      <GatsbyImage\n        image={product.image_primary.childImageSharp.gatsbyImageData}\n        alt={description}\n        title={`${post.title} ${product.title}`}\n        className={`image product-preview-image fluid`}\n      />\n    )\n\n    return (\n      <article className={`product-preview ${post.slug}`} id={product.title}>\n        <Link to={product.slug} hrefLang=\"en\" rel=\"help\">\n          <div>{VariableImage}</div>\n          <h3 className=\"is-size-6\">{truncate(product.title, 22)}</h3>\n        </Link>\n      </article>\n    )\n  }\n}\nexport default MdProductPreviewTemplate\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { graphql } from 'gatsby'\nimport { titleCase } from 'voca'\n\nimport MdProductPreview from '../components/md-product-preview'\nimport FormFormspree from '../components/form-formspree'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport generateMarkdownProductJSONLD from '../components/SEOProduct/generateMarkdownProductJSONLD'\n\nimport styles from './manufacturer-post.sass'\n\nclass ManufacturerPostTemplate extends React.Component {\n  constructor(props) {\n    super(props)\n\n    const groupedProducts = this.props.data.allMarkdownRemark.groupedProducts\n    const firstGroup = groupedProducts.slice(0, 1)\n    let localProductGroups = []\n    let uniqueProductGroups = []\n    groupedProducts.map((productGroup) => {\n      const groupName = titleCase(productGroup.fieldValue.replace(/\\-/g, ' '))\n\n      localProductGroups.push({\n        name: groupName,\n        anchor: productGroup.fieldValue,\n      })\n      uniqueProductGroups = [...new Set(localProductGroups)]\n    })\n    this.state = {\n      windowHeight: 1000,\n      productGroups: uniqueProductGroups,\n      iterableGroups: firstGroup,\n      groupedProducts,\n    }\n  }\n\n  scrollToId(id, e) {\n    console.log(id)\n    e.stopPropagation()\n    const el = document.getElementById(id)\n    console.log(el.height)\n    window.scrollTo(el.offsetLeft, el.offsetTop + el.offsetHeight)\n  }\n\n  componentDidMount() {\n    this.setState({ iterableGroups: this.state.groupedProducts })\n  }\n\n  render() {\n    const siteMetadata = this.props.data.site.siteMetadata\n    const siteTitle = siteMetadata.title\n    const post = this.props.data.contentfulManufacturer\n    const groupedProducts =\n      this.props.data.allMarkdownRemark.groupedProducts || []\n    const manufacturers = this.props.data.allContentfulManufacturer || {\n      edges: [],\n    }\n\n    return (\n      <Layout>\n        <Helmet title={`${post.title} | ${siteTitle}`} />\n        <SEO\n          pageSEO\n          pagePath={`manufacturers/${post.slug}`}\n          siteMetadata={siteMetadata}\n          postNode={post}\n          location={this.props.location}\n        />\n\n        <h1 className=\"is-sr-only\">{`${post.title} | ${siteTitle}`}</h1>\n        <section className=\"section\" id=\"manufacturer-post\">\n          <div className=\"container\">\n            <div className=\"columns is-multiline is-variable is-6\">\n              <div className=\"column is-one-third\">\n                <GatsbyImage\n                  image={post.logoImageDark.gatsbyImageData}\n                  alt={post.logoImageDark.title}\n                  title={post.logoImageDark.title}\n                  className=\"image\"\n                />\n                <br />\n                <br />\n                <GatsbyImage\n                  image={post.heroImage.gatsbyImageData}\n                  alt={post.heroImage.title}\n                  title={post.heroImage.title}\n                  className=\"image\"\n                />\n                <br />\n                <br />\n                <div\n                  className=\"content\"\n                  dangerouslySetInnerHTML={{\n                    __html: post.description.childMarkdownRemark.html,\n                  }}\n                />\n                <div className=\"content\">\n                  <div className=\"field is-grouped\">\n                    <p className=\"control no-print\">\n                      <a\n                        href={post.url}\n                        target=\"_blank\"\n                        className=\"button is-primary\"\n                        rel=\"noopener\"\n                      >\n                        <span>Visit {post.title}</span>\n                      </a>\n                    </p>\n                    <p className=\"control no-print\">\n                      <a href=\"#inquiry\" className=\"button is-secondary\">\n                        <span>Inquire</span>\n                      </a>\n                    </p>\n                  </div>\n                  <br />\n                  <div className=\"tags\">\n                    {this.state.productGroups.map((node, iterator) => {\n                      return (\n                        <span\n                          className=\"tag\"\n                          key={iterator}\n                          onClick={(e) => this.scrollToId(node.anchor, e)}\n                        >\n                          <a>{node.name}</a>\n                        </span>\n                      )\n                    })}\n                  </div>\n                </div>\n              </div>\n              <div className=\"column is-marginless\">\n                {this.state.iterableGroups.map((productGroup, iterator) => {\n                  const groupName = titleCase(\n                    productGroup.fieldValue.replace(/\\-/g, ' ')\n                  )\n                  return (\n                    <div key={iterator}>\n                      <div\n                        id={productGroup.fieldValue}\n                        className=\"column is-full is-marginless\"\n                        style={{\n                          position: 'sticky',\n                          top: '65px',\n                          background: '#FFF',\n                          zIndex: '25',\n                          display: 'block',\n                        }}\n                      >\n                        <h2\n                          className=\"title is-size-4\"\n                          style={{\n                            background: '#FFF',\n                            display: 'block',\n                          }}\n                        >\n                          {groupName}\n                        </h2>\n                      </div>\n                      {productGroup.nodes.map((product) => {\n                        const fm = product.frontmatter\n                        const jsonLd = generateMarkdownProductJSONLD(\n                          product,\n                          post,\n                          siteMetadata\n                        )\n                        return (\n                          <div\n                            key={product.id}\n                            className=\"column is-inline-block is-one-third-desktop is-half-tablet is-half-mobile\"\n                            style={{ zIndex: '500' }}\n                          >\n                            <MdProductPreview\n                              product={fm}\n                              post={post}\n                              siteMetadata={siteMetadata}\n                              path={this.props.location.pathname}\n                            />\n                          </div>\n                        )\n                      })}\n                    </div>\n                  )\n                })}\n                <section\n                  id=\"inquiry\"\n                  className=\"column is-full inquiry-section no-print\"\n                >\n                  <div\n                    style={{\n                      position: 'sticky',\n                      top: '65px',\n                      background: '#FFF',\n                      zIndex: '25',\n                      display: 'block',\n                      padding: '0.75rem 0.75rem 0.75rem 0',\n                    }}\n                  >\n                    <h3 className=\"title is-size-4\">{post.title} Inquiries</h3>\n                  </div>\n                  <FormFormspree\n                    section={post.title}\n                    manufacturers={manufacturers}\n                    recaptchaKey={siteMetadata.recaptchaKey}\n                  />\n                </section>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nexport default ManufacturerPostTemplate\n\nexport const pageQuery = graphql`\n  query ManufacturerPostBySlug($slug: String!, $title: String!) {\n    contentfulManufacturer(slug: { eq: $slug }) {\n      title\n      slug\n      tags\n      url\n      publishDate\n      resizeImages\n      description {\n        childMarkdownRemark {\n          html\n        }\n        internal {\n          content\n        }\n      }\n      heroImage {\n        title\n        description\n        gatsbyImageData\n      }\n      logoImageDark {\n        title\n        description\n        gatsbyImageData\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { manufacturer: { eq: $title } } }\n      sort: { fields: [frontmatter___title] }\n    ) {\n      tags: distinct(field: frontmatter___tags)\n      groupedProducts: group(field: frontmatter___category) {\n        fieldValue\n        nodes {\n          id\n          frontmatter {\n            title\n            category\n            description\n            designer\n            href\n            manufacturer\n            subtitle\n            tags\n            slug\n            date\n            image_primary {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 300\n                  height: 300\n                  placeholder: BLURRED\n                  transformOptions: { fit: COVER, cropFocus: ATTENTION }\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n    allContentfulManufacturer(sort: { fields: [title] }) {\n      edges {\n        node {\n          id\n          title\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        description\n        shareImage\n        shareImageWidth\n        shareImageHeight\n        publisher\n        recaptchaKey\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { getSrc } from 'gatsby-plugin-image'\n\nexport default function generateMarkdownProductJSONLD(\n  product,\n  manufacturer,\n  siteMetadata\n) {\n  return {\n    '@context': 'http://schema.org',\n    '@type': 'Product',\n    name: product.frontmatter.title,\n    image: [\n      `${siteMetadata.siteUrl}${getSrc(\n        product.frontmatter.image_primary.childImageSharp.gatsbyImageData\n      )}`,\n    ],\n    description: `${\n      unescape(product.frontmatter.description) ||\n      `${product.frontmatter.manufacturer} - ${product.frontmatter.title}` ||\n      ''\n    }`,\n    sku: `${product.id}`,\n    mpn: `${product.id}`,\n    review: {\n      '@type': 'Review',\n      reviewRating: {\n        '@type': 'Rating',\n        ratingValue: '5',\n        bestRating: '5',\n      },\n      author: {\n        '@type': 'Person',\n        name: siteMetadata.publisher,\n        url: siteMetadata.siteUrl,\n      },\n    },\n    aggregateRating: {\n      '@type': 'AggregateRating',\n      ratingValue: '5',\n      reviewCount: '1',\n    },\n    brand: {\n      '@type': 'Brand',\n      name: manufacturer.title,\n      logo: `https:${getSrc(manufacturer.logoImageDark.gatsbyImageData)}`,\n    },\n    offers: {\n      '@type': 'Offer',\n      price: '1.00',\n      priceCurrency: 'USD',\n      priceValidUntil: '2020-01-01',\n      availability: 'InStock',\n      url: `${siteMetadata.siteUrl}${product.frontmatter.slug}`,\n    },\n  }\n}\n"],"sourceRoot":""}