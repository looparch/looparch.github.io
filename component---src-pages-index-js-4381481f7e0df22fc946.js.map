{"version":3,"sources":["webpack://loop-gatsby/./src/components/carousel-preview.js","webpack://loop-gatsby/./src/components/carousel-css.js","webpack://loop-gatsby/./src/components/hero.js","webpack://loop-gatsby/./src/pages/index.js"],"names":["componentDidUpdate","this","props","article","useLightText","document","getElementById","getElementsByTagName","classList","add","render","className","G","image","heroImage","gatsbyImageData","alt","title","id","Link","to","slug","dangerouslySetInnerHTML","__html","description","childMarkdownRemark","html","hrefLang","React","playSlides","setInterval","incrementSlides","n","setState","prevState","current","slideIndex","items","state","carouselItems","length","showSlide","i","remove","componentDidMount","getElementsByClassName","posts","map","node","key","siteTitle","data","site","siteMetadata","allContentfulBlogPost","edges","manufacturers","allContentfulManufacturer","postNode","internal","content","pagePath","pageSEO","location","Helmet","property","logoImageDark"],"mappings":"4NAyDA,E,sGAlDEA,mBAAA,WACMC,KAAKC,MAAMC,QAAQC,eACrBC,SACGC,eAAe,mBACfC,qBAAqB,MAAM,GAC3BC,UAAUC,IAAI,sBACjBJ,SACGC,eAAe,mBACfC,qBAAqB,KAAK,GAC1BC,UAAUC,IAAI,wB,EAIrBC,OAAA,WACE,IAAMP,EAAUF,KAAKC,MAAMC,QAE3B,OACE,uBAAKQ,UAAU,oBACb,gBAAC,EAAAC,EAAD,CACEC,MAAOV,EAAQW,UAAUC,gBACzBC,IAAKb,EAAQc,MACbN,UAAU,2BAEZ,uBACEO,GAAG,kBACHP,UAAU,sDAEV,sBAAIA,UAAU,mBACZ,gBAAC,EAAAQ,KAAD,CAAMC,GAAE,aAAejB,EAAQkB,MAASlB,EAAQc,QAElD,uBACEN,UAAU,WACVW,wBAAyB,CACvBC,OAAQpB,EAAQqB,YAAYC,oBAAoBC,QAGpD,gBAAC,EAAAP,KAAD,CACEC,GAAE,aAAejB,EAAQkB,KACzBV,UAAU,oBACVgB,SAAS,MAHX,cAQF,uBAAKhB,UAAU,oC,GA7COiB,aC4E9B,E,YA5EE,WAAY1B,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAgBF2B,WAAa,WACXC,aAAY,WACV,EAAKC,gBAAgB,KACpB,MApBc,EAuBnBA,gBAAkB,SAAAC,GAChB,EAAKC,UACH,SAAAC,GACE,IAAIC,EAAWD,EAAUE,YAAcJ,EACjCK,EAAQ,EAAKC,MAAMC,cAOzB,OANIJ,EAAUE,EAAMG,SAClBL,EAAU,GAERA,EAAU,IACZA,EAAUE,EAAMG,QAEX,CAAEJ,WAAYD,MAEvB,WACE,EAAKM,UAAU,EAAKH,MAAMF,gBArCb,EA0CnBK,UAAY,SAAAT,GACV,IAAIU,EACEL,EAAQ,EAAKC,MAAMC,cAOzB,IANIP,EAAIK,EAAMG,QACZ,EAAKP,SAAS,CAAEG,WAAY,IAE1BJ,EAAI,GACN,EAAKC,SAAS,CAAEG,WAAYC,EAAMG,SAE/BE,EAAIL,EAAMG,OAAS,EAAGE,GAAK,EAAGA,IACjCL,EAAMK,GAAGlC,UAAUC,IAAI,UACvB4B,EAAMK,GAAGlC,UAAUmC,OAAO,WAG5BN,EAAM,EAAKC,MAAMF,WAAa,GAAG5B,UAAUC,IAAI,WAC/C4B,EAAM,EAAKC,MAAMF,WAAa,GAAG5B,UAAUmC,OAAO,WAvDlD,EAAKL,MAAQ,CACXC,cAAe,GACfH,WAAY,GAJG,G,uCAQnBQ,kBAAA,WAAqB,IAAD,OAClB3C,KAAKgC,SACH,CAAEM,cAAelC,SAASwC,uBAAuB,WACjD,SAAAb,GACE,EAAKS,UAAU,O,EAgDrB/B,OAAA,WACE,IAAMoC,EAAQ7C,KAAKC,MAAM4C,MACzB,OACE,uBAAKnC,UAAU,gBACZmC,EAAMC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OACE,uBAAKC,IAAKD,EAAK3B,KAAMV,UAAU,SAC7B,gBAAC,EAAD,CAAiBR,QAAS6C,U,GApEdpB,aCF1B,WAAe,OAAGkB,EAAH,EAAGA,MAAH,OACb,2BAASnC,UAAU,mCACjB,gBAAC,EAAD,CAAamC,MAAOA,M,UCiGxB,E,6FA3FEpC,OAAA,WACE,IAAMwC,EAAYjD,KAAKC,MAAMiD,KAAKC,KAAKC,aAAapC,MAC9C6B,EAAQ7C,KAAKC,MAAMiD,KAAKG,sBAAsBC,MAC9CC,EAAgBvD,KAAKC,MAAMiD,KAAKM,0BAA0BF,MAC1DG,EAAW,CACfzC,MAAOhB,KAAKC,MAAMiD,KAAKC,KAAKC,aAAapC,MACzCO,YAAa,CACXmC,SAAU,CACRC,QAAS3D,KAAKC,MAAMiD,KAAKC,KAAKC,aAAa7B,eAKjD,OACE,gBAAC,IAAD,KACE,uBAAKb,UAAU,mBACb,gBAAC,IAAD,CACEkD,SAAQ,GACRH,SAAUA,EACVI,SAAO,EACPT,aAAcpD,KAAKC,MAAMiD,KAAKC,KAAKC,aACnCU,SAAU9D,KAAKC,MAAM6D,WAEvB,gBAACC,EAAA,EAAD,CAAQ/C,MAAOiC,GACb,wBAAMe,SAAS,UAAUL,QAAQ,aAEnC,gBAAC,EAAD,CAAMd,MAAOA,IAEb,2BAASnC,UAAU,WACjB,uBAAKA,UAAU,aACb,sBAAIA,UAAU,SAAd,wBACA,yJAIA,kGAMJ,2BAASA,UAAU,WACjB,uBAAKA,UAAU,aACb,sBAAIA,UAAU,SAAd,qBACA,0QAQJ,2BAASA,UAAU,WACjB,uBAAKA,UAAU,aACb,sBAAIA,UAAU,SAAd,sBACA,8CACoB,qCADpB,+LAQJ,2BAASA,UAAU,4BACjB,uBAAKA,UAAU,aACb,sBAAIA,UAAU,oBAAd,qBACA,uBAAKA,UAAU,qDACZ6C,EAAcT,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACpB,OACE,uBACEC,IAAKD,EAAK3B,KACVV,UAAU,4EAEV,gBAAC,EAAAQ,KAAD,CAAMC,GAAE,kBAAoB4B,EAAK3B,KAAQM,SAAS,MAChD,gBAAC,EAAAf,EAAD,CACEC,MAAOmC,EAAKkB,cAAcnD,gBAC1BC,IAAKgC,EAAKkB,cAAc1C,yB,GA7E1BI","file":"component---src-pages-index-js-4381481f7e0df22fc946.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nimport styles from './carousel-preview.sass'\n\nclass CarouselPreview extends React.Component {\n  componentDidUpdate() {\n    if (this.props.article.useLightText) {\n      document\n        .getElementById('preview-content')\n        .getElementsByTagName('h3')[0]\n        .classList.add('has-text-white-bis')\n      document\n        .getElementById('preview-content')\n        .getElementsByTagName('p')[0]\n        .classList.add('has-text-white-bis')\n    }\n  }\n\n  render() {\n    const article = this.props.article\n\n    return (\n      <div className=\"carousel-preview\">\n        <GatsbyImage\n          image={article.heroImage.gatsbyImageData}\n          alt={article.title}\n          className=\"carousel-preview-image\"\n        />\n        <div\n          id=\"preview-content\"\n          className=\"carousel-preview-content has-text-centered content\"\n        >\n          <h3 className=\"title is-size-1\">\n            <Link to={`/articles/${article.slug}`}>{article.title}</Link>\n          </h3>\n          <div\n            className=\"subtitle\"\n            dangerouslySetInnerHTML={{\n              __html: article.description.childMarkdownRemark.html,\n            }}\n          />\n          <Link\n            to={`/articles/${article.slug}`}\n            className=\"button is-primary\"\n            hrefLang=\"en\"\n          >\n            Read More\n          </Link>\n        </div>\n        <div className=\"carousel-preview-dark-overlay\" />\n      </div>\n    )\n  }\n}\n\nexport default CarouselPreview\n","import React from 'react'\nimport CarouselPreview from './carousel-preview'\n\nimport styles from './carousel-css.sass'\n\nclass CarouselCss extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      carouselItems: {},\n      slideIndex: 1,\n    }\n  }\n\n  componentDidMount() {\n    this.setState(\n      { carouselItems: document.getElementsByClassName('slide') },\n      n => {\n        this.showSlide(1)\n      }\n    )\n  }\n\n  playSlides = () => {\n    setInterval(() => {\n      this.incrementSlides(+1)\n    }, 5000)\n  }\n\n  incrementSlides = n => {\n    this.setState(\n      prevState => {\n        let current = (prevState.slideIndex += n)\n        const items = this.state.carouselItems\n        if (current > items.length) {\n          current = 1\n        }\n        if (current < 1) {\n          current = items.length\n        }\n        return { slideIndex: current }\n      },\n      () => {\n        this.showSlide(this.state.slideIndex)\n      }\n    )\n  }\n\n  showSlide = n => {\n    let i\n    const items = this.state.carouselItems\n    if (n > items.length) {\n      this.setState({ slideIndex: 1 })\n    }\n    if (n < 1) {\n      this.setState({ slideIndex: items.length })\n    }\n    for (i = items.length - 1; i >= 0; i--) {\n      items[i].classList.add('hidden')\n      items[i].classList.remove('visible')\n    }\n\n    items[this.state.slideIndex - 1].classList.add('visible')\n    items[this.state.slideIndex - 1].classList.remove('hidden')\n  }\n\n  render() {\n    const posts = this.props.posts\n    return (\n      <div className=\"carousel-css\">\n        {posts.map(({ node }) => {\n          return (\n            <div key={node.slug} className=\"slide\">\n              <CarouselPreview article={node} />\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default CarouselCss\n","import React from 'react'\nimport CarouselCss from './carousel-css'\n\nexport default ({ posts }) => (\n  <section className=\"hero is-medium is-light is-bold\">\n    <CarouselCss posts={posts} />\n  </section>\n)\n","import React from 'react'\nimport Layout from '../components/layout'\nimport { Link } from 'gatsby'\nimport { Helmet } from 'react-helmet'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { graphql } from 'gatsby'\n\nimport Hero from '../components/hero'\nimport SEO from '../components/seo'\n\nclass RootIndex extends React.Component {\n  render() {\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const posts = this.props.data.allContentfulBlogPost.edges\n    const manufacturers = this.props.data.allContentfulManufacturer.edges\n    const postNode = {\n      title: this.props.data.site.siteMetadata.title,\n      description: {\n        internal: {\n          content: this.props.data.site.siteMetadata.description,\n        },\n      },\n    }\n\n    return (\n      <Layout>\n        <div className=\"content-section\">\n          <SEO\n            pagePath={``}\n            postNode={postNode}\n            pageSEO\n            siteMetadata={this.props.data.site.siteMetadata}\n            location={this.props.location}\n          />\n          <Helmet title={siteTitle}>\n            <meta property=\"og:type\" content=\"website\" />\n          </Helmet>\n          <Hero posts={posts} />\n\n          <section className=\"section\">\n            <div className=\"container\">\n              <h2 className=\"title\">Pioneering Materials</h2>\n              <p>\n                Loop carefully curates itâ€™s stable of lines to bring you the\n                newest, highest quality and most innovative products available.\n              </p>\n              <p>\n                Make your next project more distinctive with materials others\n                miss.\n              </p>\n            </div>\n          </section>\n          <section className=\"section\">\n            <div className=\"container\">\n              <h2 className=\"title\">Project Diversity</h2>\n              <p>\n                Our lines represent a large spectrum of possibilities. Loop\n                provides solutions for Healthcare, Hospitality, Corporate,\n                Civic, Cultural, Education, Retail, Residential, Liturgical, or\n                any other scenario your project brings to the table.\n              </p>\n            </div>\n          </section>\n          <section className=\"section\">\n            <div className=\"container\">\n              <h2 className=\"title\">End to End Support</h2>\n              <p>\n                Your projects are <strong>our</strong> projects. Understanding\n                the process is a big part of what we do. Loop supports all your\n                efforts at every waypoint from concept to completion â€“ on every\n                project from tiny to tremendous.\n              </p>\n            </div>\n          </section>\n          <section className=\"section is-hidden-mobile\">\n            <div className=\"container\">\n              <h2 className=\"title is-sr-only\">Our Manufacturers</h2>\n              <div className=\"columns is-multiline is-variable is-8 is-centered\">\n                {manufacturers.map(({ node }) => {\n                  return (\n                    <div\n                      key={node.slug}\n                      className=\"column is-inline-block is-one-quarter is-half-tablet is-half-mobile mb-4\"\n                    >\n                      <Link to={`/manufacturers/${node.slug}`} hrefLang=\"en\">\n                        <GatsbyImage\n                          image={node.logoImageDark.gatsbyImageData}\n                          alt={node.logoImageDark.description}\n                        />\n                      </Link>\n                    </div>\n                  )\n                })}\n              </div>\n            </div>\n          </section>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default RootIndex\n\nexport const pageQuery = graphql`\n  query HomeQuery {\n    allContentfulBlogPost(\n      limit: 1\n      sort: { fields: [publishDate], order: DESC }\n    ) {\n      edges {\n        node {\n          description {\n            childMarkdownRemark {\n              html\n            }\n          }\n          heroImage {\n            gatsbyImageData(height: 600, layout: FULL_WIDTH)\n          }\n          publishDate(formatString: \"MMMM Do, YYYY\")\n          slug\n          tags\n          title\n          useLightText\n        }\n      }\n    }\n    allContentfulManufacturer(sort: { fields: [title], order: ASC }) {\n      edges {\n        node {\n          title\n          slug\n          logoImageDark {\n            description\n            gatsbyImageData(width: 300, quality: 100)\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        description\n        publisher\n        shareImage\n        shareImageHeight\n        shareImageWidth\n        siteUrl\n        title\n        userTwitter\n      }\n    }\n  }\n`\n"],"sourceRoot":""}