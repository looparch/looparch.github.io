{"version":3,"sources":["webpack:///./src/components/article-preview.js","webpack:///./src/pages/articles.js"],"names":["ArticlePreview","props","render","article","this","siteMetadata","className","to","slug","hrefLang","style","color","image","heroImage","gatsbyImageData","alt","title","body","childMarkdownRemark","excerpt","React","Component","ArticleIndex","siteTitle","data","site","posts","allContentfulBlogPost","edges","Helmet","pageSEO","pagePath","postNode","description","internal","content","location","map","node","key"],"mappings":"wLAoCeA,E,YA/Bb,WAAYC,GAAQ,OAClB,YAAMA,IADW,K,oCAInBC,OAAA,WACE,IAAMC,EAAUC,KAAKH,MAAME,QACNC,KAAKH,MAAMI,aAEhC,OACE,6BAASC,UAAU,uBACjB,kBAAC,OAAD,CACEC,GAAE,aAAeJ,EAAQK,KACzBC,SAAS,KACTC,MAAO,CAAEC,MAAO,YAEhB,kBAAC,IAAD,CACEC,MAAOT,EAAQU,UAAUC,gBACzBC,IAAKZ,EAAQU,UAAUG,MACvBA,MAAOb,EAAQU,UAAUG,QAE3B,6BACA,wBAAIV,UAAU,mBAAmBH,EAAQa,OACzC,uBAAGV,UAAU,aACVH,EAAQc,KAAKC,oBAAoBC,Y,GAxBjBC,IAAMC,W,YCI7BC,E,kGACJpB,OAAA,WAAU,IAAD,OACDqB,EAAYnB,KAAKH,MAAMuB,KAAKC,KAAKpB,aAAaW,MAC9CU,EAAQtB,KAAKH,MAAMuB,KAAKG,sBAAsBC,MAWpD,OACE,kBAAC,IAAD,KACE,yBAAKtB,UAAU,mBACb,kBAACuB,EAAA,EAAD,CAAQb,MAAUO,EAAL,gBACb,kBAAC,IAAD,CACEO,SAAO,EACPC,SAAQ,WACRC,SAjBS,CACfhB,MAAO,WACPiB,YAAa,CACXC,SAAU,CACRC,QACE,oHAaA9B,aAAcD,KAAKH,MAAMuB,KAAKC,KAAKpB,aACnC+B,SAAUhC,KAAKH,MAAMmC,WAEvB,6BAAS9B,UAAU,WACjB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,mBAAd,YACA,yBAAKA,UAAU,qCACZoB,EAAMW,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OACE,yBAAKC,IAAKD,EAAK9B,KAAMF,UAAU,uBAC7B,kBAAC,EAAD,CACEH,QAASmC,EACTjC,aAAc,EAAKJ,MAAMuB,KAAKC,KAAKpB,yB,GAlChCe,IAAMC,WAgDlBC","file":"component---src-pages-articles-js-c57ef371b9c4777bb940.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nclass ArticlePreview extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const article = this.props.article\n    const siteMetadata = this.props.siteMetadata\n\n    return (\n      <article className=\"article-preview box\">\n        <Link\n          to={`/articles/${article.slug}`}\n          hrefLang=\"en\"\n          style={{ color: '#363636' }}\n        >\n          <GatsbyImage\n            image={article.heroImage.gatsbyImageData}\n            alt={article.heroImage.title}\n            title={article.heroImage.title}\n          />\n          <hr />\n          <h3 className=\"title is-size-5\">{article.title}</h3>\n          <p className=\"is-size-7\">\n            {article.body.childMarkdownRemark.excerpt}\n          </p>\n        </Link>\n      </article>\n    )\n  }\n}\n\nexport default ArticlePreview\n","import React from 'react'\nimport Layout from '../components/layout'\nimport { Helmet } from 'react-helmet'\nimport { graphql } from 'gatsby'\n\nimport ArticlePreview from '../components/article-preview'\nimport SEO from '../components/seo'\n\nclass ArticleIndex extends React.Component {\n  render() {\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const posts = this.props.data.allContentfulBlogPost.edges\n    const postNode = {\n      title: 'Articles',\n      description: {\n        internal: {\n          content:\n            'A list of articles and press releases from Loop Architectural Materials listed in the order they were created.',\n        },\n      },\n    }\n\n    return (\n      <Layout>\n        <div className=\"content-section\">\n          <Helmet title={`${siteTitle} | Articles`} />\n          <SEO\n            pageSEO\n            pagePath={`articles`}\n            postNode={postNode}\n            siteMetadata={this.props.data.site.siteMetadata}\n            location={this.props.location}\n          />\n          <section className=\"section\">\n            <div className=\"container\">\n              <h1 className=\"title is-size-4\">Articles</h1>\n              <div className=\"article-list columns is-multiline\">\n                {posts.map(({ node }) => {\n                  return (\n                    <div key={node.slug} className=\"column is-one-third\">\n                      <ArticlePreview\n                        article={node}\n                        siteMetadata={this.props.data.site.siteMetadata}\n                      />\n                    </div>\n                  )\n                })}\n              </div>\n            </div>\n          </section>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default ArticleIndex\n\nexport const pageQuery = graphql`\n  query BlogIndexQuery {\n    allContentfulBlogPost(sort: { fields: [publishDate], order: DESC }) {\n      edges {\n        node {\n          title\n          slug\n          publishDate\n          readableDate: publishDate(formatString: \"MMMM Do, YYYY\")\n          tags\n          heroImage {\n            title\n            description\n            gatsbyImageData(width: 400, height: 300)\n            file {\n              url\n            }\n          }\n          body {\n            childMarkdownRemark {\n              excerpt\n            }\n          }\n          description {\n            childMarkdownRemark {\n              excerpt\n              html\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        description\n        shareImage\n        shareImageWidth\n        shareImageHeight\n        publisher\n      }\n    }\n  }\n`\n"],"sourceRoot":""}