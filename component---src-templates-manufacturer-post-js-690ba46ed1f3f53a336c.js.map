{"version":3,"sources":["webpack://loop-gatsby/./src/components/SEOProduct/generateMarkdownProductJSONLD.js","webpack://loop-gatsby/./src/components/md-product-preview.js","webpack://loop-gatsby/./src/templates/manufacturer-post.js"],"names":["generateMarkdownProductJSONLD","product","manufacturer","siteMetadata","name","frontmatter","title","image","siteUrl","getSrc","image_primary","childImageSharp","gatsbyImageData","description","unescape","sku","id","mpn","review","reviewRating","ratingValue","bestRating","author","publisher","url","aggregateRating","reviewCount","brand","logo","logoImageDark","offers","price","priceCurrency","priceValidUntil","availability","slug","props","render","this","post","VariableImage","G","alt","className","Link","to","hrefLang","rel","style","position","React","groupedProducts","data","allMarkdownRemark","firstGroup","slice","localProductGroups","uniqueProductGroups","map","productGroup","groupName","titleCase","fieldValue","replace","push","anchor","Set","state","windowHeight","productGroups","iterableGroups","scrollToId","e","console","log","stopPropagation","el","document","getElementById","window","scrollTo","offsetLeft","offsetTop","offsetHeight","componentDidMount","setState","site","siteTitle","contentfulManufacturer","manufacturers","allContentfulManufacturer","edges","Helmet","pageSEO","pagePath","postNode","location","heroImage","dangerouslySetInnerHTML","__html","childMarkdownRemark","html","href","target","onClick","node","iterator","key","top","background","zIndex","display","nodes","fm","jsonLd","type","JSON","stringify","path","pathname","padding","section","recaptchaKey"],"mappings":"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","file":"component---src-templates-manufacturer-post-js-690ba46ed1f3f53a336c.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { getSrc } from 'gatsby-plugin-image'\n\nexport default function generateMarkdownProductJSONLD(\n  product,\n  manufacturer,\n  siteMetadata\n) {\n  return {\n    '@context': 'http://schema.org',\n    '@type': 'Product',\n    name: product.frontmatter.title,\n    image: [\n      `${siteMetadata.siteUrl}${getSrc(\n        product.frontmatter.image_primary.childImageSharp.gatsbyImageData\n      )}`,\n    ],\n    description: `${\n      unescape(product.frontmatter.description) ||\n      `${product.frontmatter.manufacturer} - ${product.frontmatter.title}` ||\n      ''\n    }`,\n    sku: `${product.id}`,\n    mpn: `${product.id}`,\n    review: {\n      '@type': 'Review',\n      reviewRating: {\n        '@type': 'Rating',\n        ratingValue: '5',\n        bestRating: '5',\n      },\n      author: {\n        '@type': 'Person',\n        name: siteMetadata.publisher,\n        url: siteMetadata.siteUrl,\n      },\n    },\n    aggregateRating: {\n      '@type': 'AggregateRating',\n      ratingValue: '5',\n      reviewCount: '1',\n    },\n    brand: {\n      '@type': 'Brand',\n      name: manufacturer.title,\n      logo: `https:${getSrc(manufacturer.logoImageDark.gatsbyImageData)}`,\n    },\n    offers: {\n      '@type': 'Offer',\n      price: '1.00',\n      priceCurrency: 'USD',\n      priceValidUntil: '2020-01-01',\n      availability: 'InStock',\n      url: `${siteMetadata.siteUrl}${product.frontmatter.slug}`,\n    },\n  }\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nimport styles from './product-preview.sass'\n\nclass MdProductPreviewTemplate extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const product = this.props.product\n    const post = this.props.post\n    const description = product.description || product.title\n\n    const VariableImage = (\n      <GatsbyImage\n        image={product.image_primary.childImageSharp.gatsbyImageData}\n        alt={description}\n        title={`${post.title} ${product.title}`}\n        className={`image product-preview-image fluid`}\n      />\n    )\n\n    return (\n      <article className={`product-preview card`} id={product.title}>\n        <Link to={product.slug} hrefLang=\"en\" rel=\"help\">\n          <div className=\"card-image\">{VariableImage}</div>\n          <div className=\"card-content\">\n            <div className=\"media-content\" style={{ position: 'absolute' }}>\n              <h3 className=\"is-size-6\">{product.title}</h3>\n            </div>\n          </div>\n        </Link>\n      </article>\n    )\n  }\n}\nexport default MdProductPreviewTemplate\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { graphql, Link } from 'gatsby'\nimport titleCase from 'voca/title_case'\n\nimport MdProductPreview from '../components/md-product-preview'\nimport FormFormspree from '../components/form-formspree'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport generateMarkdownProductJSONLD from '../components/SEOProduct/generateMarkdownProductJSONLD'\n\nimport styles from './manufacturer-post.sass'\n\nclass ManufacturerPostTemplate extends React.Component {\n  constructor(props) {\n    super(props)\n\n    const groupedProducts = this.props.data.allMarkdownRemark.groupedProducts\n    const firstGroup = groupedProducts.slice(0, 1)\n    let localProductGroups = []\n    let uniqueProductGroups = []\n    groupedProducts.map((productGroup) => {\n      const groupName = titleCase(productGroup.fieldValue.replace(/\\-/g, ' '))\n\n      localProductGroups.push({\n        name: groupName,\n        anchor: productGroup.fieldValue,\n      })\n      uniqueProductGroups = [...new Set(localProductGroups)]\n    })\n    this.state = {\n      windowHeight: 1000,\n      productGroups: uniqueProductGroups,\n      iterableGroups: firstGroup,\n      groupedProducts,\n    }\n  }\n\n  scrollToId(id, e) {\n    console.log(`${id}`, e)\n    e.stopPropagation()\n    const el = document.getElementById(id)\n    window.scrollTo(el.offsetLeft, el.offsetTop + el.offsetHeight)\n  }\n\n  componentDidMount() {\n    this.setState({ iterableGroups: this.state.groupedProducts })\n  }\n\n  render() {\n    const siteMetadata = this.props.data.site.siteMetadata\n    const siteTitle = siteMetadata.title\n    const post = this.props.data.contentfulManufacturer\n    const groupedProducts =\n      this.props.data.allMarkdownRemark.groupedProducts || []\n    const manufacturers = this.props.data.allContentfulManufacturer || {\n      edges: [],\n    }\n\n    return (\n      <Layout>\n        <Helmet title={`${post.title} | ${siteTitle}`} />\n        <SEO\n          pageSEO\n          pagePath={`manufacturers/${post.slug}`}\n          siteMetadata={siteMetadata}\n          postNode={post}\n          location={this.props.location}\n        />\n\n        <h1 className=\"is-sr-only\">{`${post.title} | ${siteTitle}`}</h1>\n        <section className=\"section\" id=\"manufacturer-post\">\n          <div className=\"container\">\n            <div className=\"columns is-multiline is-variable is-6\">\n              <div className=\"column is-one-third\">\n                <GatsbyImage\n                  image={post.logoImageDark.gatsbyImageData}\n                  alt={post.logoImageDark.title}\n                  title={post.logoImageDark.title}\n                  className=\"image\"\n                />\n                <br />\n                <br />\n                <GatsbyImage\n                  image={post.heroImage.gatsbyImageData}\n                  alt={post.heroImage.title}\n                  title={post.heroImage.title}\n                  className=\"image\"\n                />\n                <br />\n                <br />\n                <div\n                  className=\"content\"\n                  dangerouslySetInnerHTML={{\n                    __html: post.description.childMarkdownRemark.html,\n                  }}\n                />\n                <div className=\"content\">\n                  <div className=\"field is-grouped\">\n                    <p className=\"control no-print\">\n                      <a\n                        href={post.url}\n                        target=\"_blank\"\n                        className=\"button is-primary\"\n                        rel=\"noopener\"\n                      >\n                        <span>Visit {post.title}</span>\n                      </a>\n                    </p>\n                    <p className=\"control no-print\">\n                      <Link\n                        to=\"#inquiry\"\n                        className=\"button is-secondary\"\n                        onClick={(e) => this.scrollToId('inquiry', e)}\n                      >\n                        <span>Inquire</span>\n                      </Link>\n                    </p>\n                  </div>\n                  <br />\n                  <div className=\"tags\">\n                    {this.state.productGroups.map((node, iterator) => {\n                      return (\n                        <span className=\"tag\" key={iterator}>\n                          <Link\n                            to={`#${node.anchor}`}\n                            onClick={(e) => this.scrollToId(node.anchor, e)}\n                          >\n                            {node.name}\n                          </Link>\n                        </span>\n                      )\n                    })}\n                  </div>\n                </div>\n              </div>\n              <div className=\"column is-marginless is-paddingless\">\n                {this.state.groupedProducts.map((productGroup, iterator) => {\n                  const groupName = titleCase(\n                    productGroup.fieldValue.replace(/\\-/g, ' ')\n                  )\n                  return (\n                    <div key={iterator}>\n                      <div\n                        id={productGroup.fieldValue}\n                        className=\"column is-full is-marginless\"\n                        style={{\n                          position: 'sticky',\n                          top: '65px',\n                          background: '#FFF',\n                          zIndex: '25',\n                          display: 'block',\n                        }}\n                      >\n                        <h2\n                          className=\"title is-size-4\"\n                          style={{\n                            background: '#FFF',\n                            display: 'block',\n                          }}\n                        >\n                          {groupName}\n                        </h2>\n                      </div>\n                      {productGroup.nodes.map((product) => {\n                        const fm = product.frontmatter\n                        const jsonLd = generateMarkdownProductJSONLD(\n                          product,\n                          post,\n                          siteMetadata\n                        )\n                        return (\n                          <div\n                            key={product.id}\n                            className=\"column is-inline-block is-one-third-desktop is-half-tablet is-half-mobile\"\n                            style={{ zIndex: '500' }}\n                          >\n                            <Helmet>\n                              <script type=\"application/ld+json\">\n                                {JSON.stringify(jsonLd)}\n                              </script>\n                            </Helmet>\n                            <MdProductPreview\n                              product={fm}\n                              post={post}\n                              siteMetadata={siteMetadata}\n                              path={this.props.location.pathname}\n                            />\n                          </div>\n                        )\n                      })}\n                    </div>\n                  )\n                })}\n                <section\n                  id=\"inquiry\"\n                  className=\"column is-full inquiry-section no-print\"\n                >\n                  <div\n                    style={{\n                      position: 'sticky',\n                      top: '65px',\n                      background: '#FFF',\n                      zIndex: '25',\n                      display: 'block',\n                      padding: '0.75rem 0.75rem 0.75rem 0',\n                    }}\n                  >\n                    <h3 className=\"title is-size-4\">{post.title} Inquiries</h3>\n                  </div>\n                  <FormFormspree\n                    section={post.title}\n                    manufacturers={manufacturers}\n                    recaptchaKey={siteMetadata.recaptchaKey}\n                  />\n                </section>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nexport default ManufacturerPostTemplate\n\nexport const pageQuery = graphql`\n  query ManufacturerPostBySlug($slug: String!, $title: String!) {\n    contentfulManufacturer(slug: { eq: $slug }) {\n      title\n      slug\n      tags\n      url\n      publishDate\n      resizeImages\n      description {\n        childMarkdownRemark {\n          html\n        }\n        internal {\n          content\n        }\n      }\n      heroImage {\n        title\n        description\n        gatsbyImageData\n      }\n      logoImageDark {\n        title\n        description\n        gatsbyImageData\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { manufacturer: { eq: $title } } }\n      sort: { fields: [frontmatter___title] }\n    ) {\n      tags: distinct(field: frontmatter___tags)\n      groupedProducts: group(field: frontmatter___category) {\n        fieldValue\n        nodes {\n          id\n          frontmatter {\n            title\n            category\n            description\n            designer\n            href\n            manufacturer\n            subtitle\n            tags\n            slug\n            date\n            image_primary {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 300\n                  height: 300\n                  placeholder: BLURRED\n                  transformOptions: { fit: COVER, cropFocus: ATTENTION }\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n    allContentfulManufacturer(sort: { fields: [title] }) {\n      edges {\n        node {\n          id\n          title\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        description\n        publisher\n        recaptchaKey\n        shareImage\n        shareImageHeight\n        shareImageWidth\n        siteUrl\n        title\n        userTwitter\n      }\n    }\n  }\n`\n"],"sourceRoot":""}