{"version":3,"sources":["webpack://loop-gatsby/./node_modules/voca/helper/string/to_string.js","webpack://loop-gatsby/./node_modules/voca/helper/undefined/nil_default.js","webpack://loop-gatsby/./node_modules/voca/kebab_case.js","webpack://loop-gatsby/./node_modules/voca/lower_case.js","webpack://loop-gatsby/./node_modules/voca/words.js","webpack://loop-gatsby/./src/components/CategoryPreview/CategoryPreview.js","webpack://loop-gatsby/./src/pages/categories/index.js"],"names":["Object","defineProperty","exports","value","default","_is_nil2","_is_string2","String","_interopRequireDefault","obj","__esModule","module","defaultValue","subject","subjectString","_coerce_to_string2","_words2","map","_lower_case2","join","toLowerCase","_coerce_to_string","pattern","flags","patternRegExp","_const_extended","REGEXP_EXTENDED_ASCII","test","REGEXP_LATIN_WORD","REGEXP_WORD","RegExp","flagsString","_to_string2","_nil_default2","match","CategoryPreview","props","render","category","this","className","Link","to","kebabCase","fieldValue","style","height","zIndex","textAlign","background","position","bottom","width","padding","G","image","edges","node","frontmatter","image_primary","childImageSharp","gatsbyImageData","alt","title","objectFit","objectPosition","React","defaultProps","siteTitle","data","site","siteMetadata","categories","allContentfulManufacturer","group","Layout","Helmet","Seo","pagePath","postNode","description","internal","content","pageSEO","location","id","index","key","hrefLang","rel"],"mappings":"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","file":"component---src-pages-categories-index-js-7d3f34ee2a7cfafead09.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toString;\n\nvar _is_nil = require('../object/is_nil');\n\nvar _is_nil2 = _interopRequireDefault(_is_nil);\n\nvar _is_string = require('../../is_string');\n\nvar _is_string2 = _interopRequireDefault(_is_string);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Get the string representation of the `value`.\n * Converts the `value` to string.\n *\n * @ignore\n * @function toString\n * @param {*} value             The value to convert.\n * @return {string|null}        Returns the string representation of `value`.\n */\n\n\nfunction toString(value) {\n  if ((0, _is_nil2.default)(value)) {\n    return null;\n  }\n\n  if ((0, _is_string2.default)(value)) {\n    return value;\n  }\n\n  return String(value);\n}\n\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = nilDefault;\n/**\n * Verifies if `value` is `undefined` or `null` and returns `defaultValue`. In other case returns `value`.\n *\n * @ignore\n * @function nilDefault\n * @param {*} value The value to verify.\n * @param {*} defaultValue The default value.\n * @return {*} Returns `defaultValue` if `value` is `undefined` or `null`, otherwise `defaultValue`.\n */\n\nfunction nilDefault(value, defaultValue) {\n  return value == null ? defaultValue : value;\n}\n\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = kebabCase;\n\nvar _coerce_to_string = require('./helper/string/coerce_to_string');\n\nvar _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);\n\nvar _lower_case = require('./lower_case');\n\nvar _lower_case2 = _interopRequireDefault(_lower_case);\n\nvar _words = require('./words');\n\nvar _words2 = _interopRequireDefault(_words);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Converts the `subject` to <a href=\"https://en.wikipedia.org/wiki/Letter_case#cite_ref-13\">kebab case</a>,\n * also called <i>spinal case</i> or <i>lisp case</i>.\n *\n * @function kebabCase\n * @static\n * @since 1.0.0\n * @memberOf Case\n * @param  {string} [subject=''] The string to convert to kebab case.\n * @return {string}              Returns the kebab case string.\n * @example\n * v.kebabCase('goodbye blue sky');\n * // => 'goodbye-blue-sky'\n *\n * v.kebabCase('GoodbyeBlueSky');\n * // => 'goodbye-blue-sky'\n *\n * v.kebabCase('-Goodbye-Blue-Sky-');\n * // => 'goodbye-blue-sky'\n */\n\n\nfunction kebabCase(subject) {\n  var subjectString = (0, _coerce_to_string2.default)(subject);\n\n  if (subjectString === '') {\n    return '';\n  }\n\n  return (0, _words2.default)(subjectString).map(_lower_case2.default).join('-');\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = lowerCase;\n\nvar _coerce_to_string = require('./helper/string/coerce_to_string');\n\nvar _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Converts the `subject` to lower case.\n *\n * @function lowerCase\n * @static\n * @since 1.0.0\n * @memberOf Case\n * @param  {string} [subject=''] The string to convert to lower case.\n * @return {string}              Returns the lower case string.\n * @example\n * v.lowerCase('Green');\n * // => 'green'\n *\n * v.lowerCase('BLUE');\n * // => 'blue'\n */\n\n\nfunction lowerCase(subject) {\n  var subjectString = (0, _coerce_to_string2.default)(subject, '');\n  return subjectString.toLowerCase();\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = words;\n\nvar _const_extended = require('./helper/reg_exp/const_extended');\n\nvar _coerce_to_string = require('./helper/string/coerce_to_string');\n\nvar _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);\n\nvar _is_nil = require('./helper/object/is_nil');\n\nvar _is_nil2 = _interopRequireDefault(_is_nil);\n\nvar _nil_default = require('./helper/undefined/nil_default');\n\nvar _nil_default2 = _interopRequireDefault(_nil_default);\n\nvar _to_string = require('./helper/string/to_string');\n\nvar _to_string2 = _interopRequireDefault(_to_string);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Splits `subject` into an array of words.\n *\n * @function words\n * @static\n * @since 1.0.0\n * @memberOf Split\n * @param {string} [subject=''] The string to split into words.\n * @param {string|RegExp} [pattern] The pattern to watch words. If `pattern` is not RegExp, it is transformed to `new RegExp(pattern, flags)`.\n * @param {string} [flags=''] The regular expression flags. Applies when `pattern` is string type.\n * @return {Array} Returns the array of words.\n * @example\n * v.words('gravity can cross dimensions');\n * // => ['gravity', 'can', 'cross', 'dimensions']\n *\n * v.words('GravityCanCrossDimensions');\n * // => ['Gravity', 'Can', 'Cross', 'Dimensions']\n *\n * v.words('Gravity - can cross dimensions!');\n * // => ['Gravity', 'can', 'cross', 'dimensions']\n *\n * v.words('Earth gravity', /[^\\s]+/g);\n * // => ['Earth', 'gravity']\n */\n\n\nfunction words(subject, pattern, flags) {\n  var subjectString = (0, _coerce_to_string2.default)(subject);\n  var patternRegExp = void 0;\n\n  if ((0, _is_nil2.default)(pattern)) {\n    patternRegExp = _const_extended.REGEXP_EXTENDED_ASCII.test(subjectString) ? _const_extended.REGEXP_LATIN_WORD : _const_extended.REGEXP_WORD;\n  } else if (pattern instanceof RegExp) {\n    patternRegExp = pattern;\n  } else {\n    var flagsString = (0, _to_string2.default)((0, _nil_default2.default)(flags, ''));\n    patternRegExp = new RegExp((0, _to_string2.default)(pattern), flagsString);\n  }\n\n  return (0, _nil_default2.default)(subjectString.match(patternRegExp), []);\n}\n\nmodule.exports = exports['default'];","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nimport kebabCase from 'voca/kebab_case'\n\nclass CategoryPreview extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const category = this.props.category\n    return (\n      <div className=\"column is-inline-block is-one-quarter-desktop is-one-third-tablet is-half-mobile is-relative\">\n        <Link to={`/categories/${kebabCase(category.fieldValue)}`}>\n          <div\n            className=\"is-overlay\"\n            style={{\n              height: '100%',\n              zIndex: 30,\n              textAlign: 'center',\n            }}\n          >\n            <h3\n              className=\"\"\n              style={{\n                background: 'rgba(255,255,255,0.8)',\n                position: 'absolute',\n                bottom: '1rem',\n                width: '100%',\n                // left: '50%',\n                // transform: 'translate(-50%, -50%)',\n                padding: '1rem',\n              }}\n            >\n              {category.fieldValue}\n            </h3>\n          </div>\n          <GatsbyImage\n            image={\n              category.edges[0].node.frontmatter.image_primary.childImageSharp\n                .gatsbyImageData\n            }\n            alt={category.edges[0].node.frontmatter.title}\n            objectFit=\"scale-down\"\n            objectPosition=\"25% 25%\"\n          />\n        </Link>\n      </div>\n    )\n  }\n}\n\nCategoryPreview.propTypes = {\n  category: PropTypes.object.isRequired,\n}\n\nCategoryPreview.defaultProps = {\n  category: {},\n}\n\nexport default CategoryPreview\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { Helmet } from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nimport kebabCase from 'voca/kebab_case'\n\nimport Layout from '../../components/Layout'\nimport CategoryPreview from '../../components/CategoryPreview'\nimport Seo from '../../components/Seo'\n\nclass CategoriesIndex extends React.Component {\n  render() {\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const posts = this.props.data.allContentfulManufacturer.edges\n    const categories = this.props.data.categories.group\n\n    const postNode = {\n      title: 'Categories',\n      description: {\n        internal: {\n          content: 'Loop Architectural Materials product listing by category.',\n        },\n      },\n    }\n\n    return (\n      <Layout>\n        <div className=\"content-section\">\n          <Helmet title={`${siteTitle} | Product Categories`} />\n          <Seo\n            pagePath={`categories`}\n            postNode={postNode}\n            pageSEO\n            siteMetadata={this.props.data.site.siteMetadata}\n            location={this.props.location}\n          />\n          <section className=\"section\" id=\"categories\">\n            <div className=\"container\">\n              <h1 className=\"title is-size-4\">Product Categories</h1>\n              <div className=\"columns is-multiline is-variable is-4\">\n                {categories.map((group, index) => {\n                  const category = group.edges[0].node.frontmatter\n                  return (\n                    <article\n                      className={`column is-inline-block is-one-quarter-desktop is-one-third-tablet is-half-mobile`}\n                      id={group.fieldValue}\n                      key={group.fieldValue}\n                    >\n                      <Link\n                        to={`/categories/${kebabCase(group.fieldValue)}`}\n                        hrefLang=\"en\"\n                        rel=\"help\"\n                      >\n                        <GatsbyImage\n                          image={\n                            category.image_primary.childImageSharp\n                              .gatsbyImageData\n                          }\n                          alt={group.fieldValue}\n                          className={`image product-preview-image fluid`}\n                        />\n                        <h3 className=\"is-size-6\">{`${group.fieldValue}`}</h3>\n                      </Link>\n                    </article>\n                  )\n                })}\n              </div>\n            </div>\n          </section>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default CategoriesIndex\n\nexport const pageQuery = graphql`\n  query CategoryIndexQuery {\n    allContentfulManufacturer(sort: { fields: [title], order: ASC }) {\n      edges {\n        node {\n          title\n          slug\n          publishDate(formatString: \"MMMM Do, YYYY\")\n          tags\n          logoImageDark {\n            description\n            gatsbyImageData(height: 150, quality: 100)\n          }\n          description {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        description\n        publisher\n        shareImage\n        shareImageHeight\n        shareImageWidth\n        siteUrl\n        title\n        userTwitter\n      }\n    }\n    categories: allMarkdownRemark {\n      group(field: frontmatter___category, limit: 1) {\n        fieldValue\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              image_primary {\n                childImageSharp {\n                  gatsbyImageData(\n                    width: 300\n                    height: 300\n                    placeholder: BLURRED\n                    transformOptions: { fit: COVER, cropFocus: ATTENTION }\n                  )\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}