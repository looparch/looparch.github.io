{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./src/components/map.js"],"names":["ContactPage","render","siteMetadata","this","props","data","site","siteTitle","title","manufacturers","allContentfulManufacturer","edges","className","pagePath","postNode","description","internal","content","pageSEO","location","API_KEY","mapKey","PLACE_ID","placeId","section","recaptchaKey","React","Component","GoogleMap","state","LOOPARCH_MAPS_KEY","type","src","async","defer","id","css","display","height"],"mappings":"kNASMA,E,kGACJC,OAAA,WACE,IAAMC,EAAeC,KAAKC,MAAMC,KAAKC,KAAKJ,aACpCK,EAAYL,EAAaM,MACzBC,EAAgBN,KAAKC,MAAMC,KAAKK,2BAA6B,CACjEC,MAAO,IAWT,OACE,gBAAC,IAAD,KACE,uBAAKC,UAAU,mBACb,gBAAC,IAAD,CAAQJ,MAAUD,EAAL,kBACb,gBAAC,IAAD,CACEM,SAAQ,UACRC,SAfS,CACfN,MAAO,aACPO,YAAa,CACXC,SAAU,CACRC,QAAS,qCAYPC,SAAO,EACPhB,aAAcC,KAAKC,MAAMC,KAAKC,KAAKJ,aACnCiB,SAAUhB,KAAKC,MAAMe,WAEvB,gBAAC,IAAD,CACEC,QAASjB,KAAKC,MAAMC,KAAKC,KAAKJ,aAAamB,OAC3CC,SAAUnB,KAAKC,MAAMC,KAAKC,KAAKJ,aAAaqB,UAE9C,2BAASX,UAAU,WACjB,uBAAKA,UAAU,aACb,sBAAIA,UAAU,mBAAd,gBACA,uBAAKA,UAAU,WACb,uBAAKA,UAAU,wBACb,gBAAC,IAAD,CACEY,QAAQ,aACRf,cAAeA,EACfgB,aAAcvB,EAAauB,gBAG/B,uBAAKb,UAAU,UACb,uBAAKA,UAAU,WACb,8MAMA,qDACA,yBACE,gEADF,IACkD,2BADlD,uBAEsB,2BAFtB,6B,GAnDMc,IAAMC,WAmEjB3B,a,sHCzET4B,E,YACJ,WAAYxB,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKyB,MAAQ,GAFI,E,oCAKnB5B,OAAA,WACE,IAAM6B,EAAoB3B,KAAKC,MAAMgB,QAErC,OACE,2BAASR,UAAU,IACjB,gBAAC,IAAD,KACE,0BAAQmB,KAAK,mBAAb,+yCAoCA,0BACEC,IAAG,+CAAiDF,EAAjD,qCACHG,OAAK,EACLC,OAAK,KAGT,uBAAKtB,UAAU,IACb,uBACEuB,GAAG,MACHC,IAAK,CACHC,QAAS,QACTC,OAAQ,c,GA3DEZ,IAAMC,WAoEfC,Q","file":"component---src-pages-contact-js-7bdb6d2dd1654af410a0.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\nimport { Helmet } from 'react-helmet'\nimport { graphql } from 'gatsby'\n\nimport GoogleMap from '../components/map'\nimport FormFormspree from '../components/form-formspree'\nimport SEO from '../components/seo'\n\nclass ContactPage extends React.Component {\n  render() {\n    const siteMetadata = this.props.data.site.siteMetadata\n    const siteTitle = siteMetadata.title\n    const manufacturers = this.props.data.allContentfulManufacturer || {\n      edges: [],\n    }\n    const postNode = {\n      title: 'Contact Us',\n      description: {\n        internal: {\n          content: 'We would love to hear from you.',\n        },\n      },\n    }\n\n    return (\n      <Layout>\n        <div className=\"content-section\">\n          <Helmet title={`${siteTitle} | Contact Us`} />\n          <SEO\n            pagePath={`contact`}\n            postNode={postNode}\n            pageSEO\n            siteMetadata={this.props.data.site.siteMetadata}\n            location={this.props.location}\n          />\n          <GoogleMap\n            API_KEY={this.props.data.site.siteMetadata.mapKey}\n            PLACE_ID={this.props.data.site.siteMetadata.placeId}\n          />\n          <section className=\"section\">\n            <div className=\"container\">\n              <h1 className=\"title is-size-4\"> Contact Us </h1>\n              <div className=\"columns\">\n                <div className=\"column is-two-thirds\">\n                  <FormFormspree\n                    section=\"Contact Us\"\n                    manufacturers={manufacturers}\n                    recaptchaKey={siteMetadata.recaptchaKey}\n                  />\n                </div>\n                <div className=\"column\">\n                  <div className=\"content\">\n                    <p>\n                      We’d love to hear from you. If you’re interested in\n                      receiving samples, scheduling a presentation or talking to\n                      us about any of our product lines, feel free to fill out\n                      the form.\n                    </p>\n                    <p>Our showroom address is:</p>\n                    <p>\n                      <strong> Loop Architectural Materials </strong> <br />\n                      3110 N 16 th Street <br />\n                      Phoenix, AZ 85016\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default ContactPage\n\nexport const pageQuery = graphql`\n  query ContactQuery {\n    allContentfulManufacturer(sort: { fields: [title] }) {\n      edges {\n        node {\n          id\n          title\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        description\n        shareImage\n        shareImageWidth\n        shareImageHeight\n        publisher\n        mapKey\n        placeId\n        recaptchaKey\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nclass GoogleMap extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render() {\n    const LOOPARCH_MAPS_KEY = this.props.API_KEY\n\n    return (\n      <section className=\"\">\n        <Helmet>\n          <script type=\"text/javascript\">\n            {`\n            const looparch = {lat: 33.484319, lng: -112.047970};\n            const looparchPlaceID = 'ChIJu8uonngSK4cRyrk911TEaok';\n            let map\n            let marker\n            let infowindow\n            let service\n\n            function initMap() {\n              map = new google.maps.Map(document.getElementById('map'), {\n                center: looparch,\n                zoom: 10\n              });\n\n              infowindow = new google.maps.InfoWindow()\n              service = new google.maps.places.PlacesService(map)\n\n              service.getDetails({\n                placeId: looparchPlaceID\n              }, (place, status) => {\n                if (status === google.maps.places.PlacesServiceStatus.OK) {\n                  marker = new google.maps.Marker({\n                    map: map,\n                    position: place.geometry.location,\n                    animation: google.maps.Animation.DROP,\n                  });\n                  google.maps.event.addListener(marker, 'click', function() {\n                    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' +\n                      place.formatted_address + '</div>');\n                    infowindow.open(map, this);\n                  });\n                }\n              })\n            }`}\n          </script>\n          <script\n            src={`https://maps.googleapis.com/maps/api/js?key=${LOOPARCH_MAPS_KEY}&libraries=places&callback=initMap`}\n            async\n            defer\n          />\n        </Helmet>\n        <div className=\"\">\n          <div\n            id=\"map\"\n            css={{\n              display: 'block',\n              height: '20rem',\n            }}\n          />\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default GoogleMap\n"],"sourceRoot":""}