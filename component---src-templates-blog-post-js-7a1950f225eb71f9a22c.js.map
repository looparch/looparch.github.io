{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","componentDidMount","h2s","document","getElementById","getElementsByTagName","i","length","classList","add","render","siteMetadata","this","props","data","site","siteTitle","title","post","contentfulBlogPost","person","contentfulPerson","className","pagePath","slug","postNode","postSEO","customTitle","location","image","heroImage","gatsbyImageData","alt","id","dangerouslySetInnerHTML","__html","body","childMarkdownRemark","html","name","readableDate","tags","map","node","key","React","Component"],"mappings":"oMAQMA,E,0GACJC,kBAAA,WAGE,IAFA,IAAMC,EAAMC,SAASC,eAAe,YAAYC,qBAAqB,MAE5DC,EAAIJ,EAAIK,OAAS,EAAGD,GAAK,EAAGA,IACnCJ,EAAII,GAAGE,UAAUC,IAAI,U,EAIzBC,OAAA,WACE,IAAMC,EAAeC,KAAKC,MAAMC,KAAKC,KAAKJ,aACpCK,EAAYL,EAAaM,MACzBC,EAAON,KAAKC,MAAMC,KAAKK,mBACvBC,EAASR,KAAKC,MAAMC,KAAKO,iBAE/B,OACE,gBAAC,IAAD,KACE,uBAAKC,UAAU,2BACb,gBAAC,IAAD,CAAQL,MAAUC,EAAKD,MAAV,MAAqBD,IASlC,gBAAC,IAAD,CACEO,SAAQ,YAAcL,EAAKM,KAC3BC,SAAUP,EACVQ,SAAO,EACPC,YAAaT,EAAKD,MAClBN,aAAcA,EACdiB,SAAUhB,KAAKC,MAAMe,WAEvB,uBAAKN,UAAU,WACb,uBAAKA,UAAU,qBACb,sBAAIA,UAAU,mBAAmBJ,EAAKD,OACtC,gBAAC,IAAD,CACEY,MAAOX,EAAKY,UAAUC,gBACtBC,IAAKd,EAAKY,UAAUb,MACpBA,MAAOC,EAAKY,UAAUb,MACtBK,UAAU,UAEZ,2BACA,uBACEW,GAAG,WACHC,wBAAyB,CACvBC,OAAQjB,EAAKkB,KAAKC,oBAAoBC,QAG1C,2BACA,uBAAKhB,UAAU,IACb,uBAAKA,UAAU,2BACb,8BAASF,EAAOmB,MADlB,MACoCrB,EAAKsB,cAEzC,uBAAKlB,UAAU,4BACb,uBAAKA,UAAU,QACZJ,EAAKuB,KAAKC,KAAI,SAACC,GACd,OACE,wBAAMrB,UAAU,MAAMsB,IAAKD,GACxBA,c,GA7DIE,IAAMC,WA4EtB9C,a","file":"component---src-templates-blog-post-js-7a1950f225eb71f9a22c.js","sourcesContent":["import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nclass BlogPostTemplate extends React.Component {\n  componentDidMount() {\n    const h2s = document.getElementById('postBody').getElementsByTagName('h2')\n\n    for (var i = h2s.length - 1; i >= 0; i--) {\n      h2s[i].classList.add('title')\n    }\n  }\n\n  render() {\n    const siteMetadata = this.props.data.site.siteMetadata\n    const siteTitle = siteMetadata.title\n    const post = this.props.data.contentfulBlogPost\n    const person = this.props.data.contentfulPerson\n\n    return (\n      <Layout>\n        <div className=\"article content-section\">\n          <Helmet title={`${post.title} | ${siteTitle}`} />\n          {/* <Helmet>\n            <script\n              type=\"text/javascript\"\n              async\n              defer\n              src=\"//assets.pinterest.com/js/pinit.js\"\n            ></script>\n          </Helmet> */}\n          <SEO\n            pagePath={`articles/${post.slug}`}\n            postNode={post}\n            postSEO\n            customTitle={post.title}\n            siteMetadata={siteMetadata}\n            location={this.props.location}\n          />\n          <div className=\"section\">\n            <div className=\"container content\">\n              <h1 className=\"title is-size-2\">{post.title}</h1>\n              <GatsbyImage\n                image={post.heroImage.gatsbyImageData}\n                alt={post.heroImage.title}\n                title={post.heroImage.title}\n                className=\"image\"\n              />\n              <hr />\n              <div\n                id=\"postBody\"\n                dangerouslySetInnerHTML={{\n                  __html: post.body.childMarkdownRemark.html,\n                }}\n              />\n              <hr />\n              <div className=\"\">\n                <div className=\"is-pulled-left is-block\">\n                  <strong>{person.name}</strong> â€“ {post.readableDate}\n                </div>\n                <div className=\"is-pulled-right is-block\">\n                  <div className=\"tags\">\n                    {post.tags.map((node) => {\n                      return (\n                        <span className=\"tag\" key={node}>\n                          {node}\n                        </span>\n                      )\n                    })}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    contentfulPerson(name: { eq: \"Loop\" }) {\n      name\n    }\n    contentfulBlogPost(slug: { eq: $slug }) {\n      title\n      slug\n      publishDate\n      tags\n      readableDate: publishDate(formatString: \"MMMM Do, YYYY\")\n      description {\n        internal {\n          content\n        }\n        childMarkdownRemark {\n          html\n        }\n      }\n      heroImage {\n        title\n        gatsbyImageData(height: 1200, width: 2000, quality: 100)\n      }\n      body {\n        childMarkdownRemark {\n          html\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        description\n        shareImage\n        shareImageWidth\n        shareImageHeight\n        publisher\n      }\n    }\n  }\n`\n"],"sourceRoot":""}