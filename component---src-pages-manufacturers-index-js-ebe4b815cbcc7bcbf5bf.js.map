{"version":3,"sources":["webpack:///./src/components/manufacturer-preview.js","webpack:///./src/pages/manufacturers/index.js"],"names":["article","className","to","slug","hrefLang","image","logoImageDark","gatsbyImageData","alt","description","tags","map","tag","key","ManufacturersIndex","render","siteTitle","this","props","data","site","siteMetadata","title","posts","allContentfulManufacturer","edges","Helmet","pagePath","postNode","internal","content","pageSEO","location","node","React","Component"],"mappings":"wLAMe,G,UAAA,gBAAGA,EAAH,EAAGA,QAAH,OACb,yBAAKC,UAAU,uBACb,yBAAKA,UAAU,OACb,kBAAC,OAAD,CAAMC,GAAE,kBAAoBF,EAAQG,KAAQC,SAAS,MACnD,yBAAKH,UAAU,iBACb,kBAAC,IAAD,CACEI,MAAOL,EAAQM,cAAcC,gBAC7BC,IAAKR,EAAQM,cAAcG,cAE7B,yBAAKR,UAAU,QACZD,EAAQU,KAAKC,KAAI,SAACC,GACjB,OACE,yBAAKX,UAAU,MAAMY,IAAKD,GACvBA,a,YCRbE,G,4GACJC,OAAA,WACE,IAAMC,EAAYC,KAAKC,MAAMC,KAAKC,KAAKC,aAAaC,MAC9CC,EAAQN,KAAKC,MAAMC,KAAKK,0BAA0BC,MAWxD,OACE,kBAAC,IAAD,KACE,yBAAKxB,UAAU,mBACb,kBAACyB,EAAA,EAAD,CAAQJ,MAAUN,EAAL,yBACb,kBAAC,IAAD,CACEW,SAAQ,gBACRC,SAhBS,CACfN,MAAO,oBACPb,YAAa,CACXoB,SAAU,CACRC,QACE,qFAYAC,SAAO,EACPV,aAAcJ,KAAKC,MAAMC,KAAKC,KAAKC,aACnCW,SAAUf,KAAKC,MAAMc,WAEvB,6BAAS/B,UAAU,WACjB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,mBAAd,qBACA,yBAAKA,UAAU,0CACZsB,EAAMZ,KAAI,YAAe,IAAZsB,EAAW,EAAXA,KACZ,OAAO,kBAAC,EAAD,CAAqBpB,IAAKoB,EAAK9B,KAAMH,QAASiC,a,GA9BtCC,IAAMC,YAyCxBrB,a","file":"component---src-pages-manufacturers-index-js-ebe4b815cbcc7bcbf5bf.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nimport styles from './manufacturer-preview.scss'\n\nexport default ({ article }) => (\n  <div className=\"column is-one-third\">\n    <div className=\"box\">\n      <Link to={`/manufacturers/${article.slug}`} hrefLang=\"en\">\n        <div className=\"image-wrapper\">\n          <GatsbyImage\n            image={article.logoImageDark.gatsbyImageData}\n            alt={article.logoImageDark.description}\n          />\n          <div className=\"tags\">\n            {article.tags.map((tag) => {\n              return (\n                <div className=\"tag\" key={tag}>\n                  {tag}\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </Link>\n    </div>\n  </div>\n)\n","import React from 'react'\nimport Layout from '../../components/layout'\nimport { Link } from 'gatsby'\nimport { Helmet } from 'react-helmet'\nimport { graphql } from 'gatsby'\n\nimport ManufacturerPreview from '../../components/manufacturer-preview'\nimport SEO from '../../components/seo'\n\nimport styles from './index.sass'\n\nclass ManufacturersIndex extends React.Component {\n  render() {\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const posts = this.props.data.allContentfulManufacturer.edges\n    const postNode = {\n      title: 'Our Manufacturers',\n      description: {\n        internal: {\n          content:\n            'A current listing of the manufacturers Loop Architectural Materials represents.',\n        },\n      },\n    }\n\n    return (\n      <Layout>\n        <div className=\"content-section\">\n          <Helmet title={`${siteTitle} | Our Manufacturers`} />\n          <SEO\n            pagePath={`manufacturers`}\n            postNode={postNode}\n            pageSEO\n            siteMetadata={this.props.data.site.siteMetadata}\n            location={this.props.location}\n          />\n          <section className=\"section\">\n            <div className=\"container\">\n              <h1 className=\"title is-size-4\">Our Manufacturers</h1>\n              <div className=\"manufacturer-list columns is-multiline\">\n                {posts.map(({ node }) => {\n                  return <ManufacturerPreview key={node.slug} article={node} />\n                })}\n              </div>\n            </div>\n          </section>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default ManufacturersIndex\n\nexport const pageQuery = graphql`\n  query ManufacturerIndexQuery {\n    allContentfulManufacturer(sort: { fields: [title], order: ASC }) {\n      edges {\n        node {\n          title\n          slug\n          publishDate(formatString: \"MMMM Do, YYYY\")\n          tags\n          logoImageDark {\n            description\n            gatsbyImageData(height: 150, quality: 100)\n          }\n          description {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        description\n        publisher\n        shareImage\n        shareImageHeight\n        shareImageWidth\n        siteUrl\n        title\n        userTwitter\n      }\n    }\n  }\n`\n"],"sourceRoot":""}