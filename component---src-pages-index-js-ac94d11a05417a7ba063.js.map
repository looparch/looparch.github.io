{"version":3,"sources":["webpack://loop-gatsby/./node_modules/voca/capitalize.js","webpack://loop-gatsby/./node_modules/voca/helper/boolean/coerce_to_boolean.js","webpack://loop-gatsby/./node_modules/voca/title_case.js","webpack://loop-gatsby/./src/components/Seo/index.js","webpack://loop-gatsby/./src/components/Seo/Seo.js","webpack://loop-gatsby/./src/components/IndexHero/index.js","webpack://loop-gatsby/./src/components/IndexHero/IndexHero.js","webpack://loop-gatsby/./src/pages/index.js"],"names":["Object","defineProperty","exports","value","default","subject","restToLower","subjectString","_coerce_to_string2","restToLowerCaseBoolean","_coerce_to_boolean2","toLowerCase","substr","toUpperCase","_interopRequireDefault","obj","__esModule","module","defaultValue","arguments","length","undefined","_is_nil2","Boolean","_is_nil","noSplit","noSplitArray","Array","isArray","wordsRegExp","_const_extended","REGEXP_EXTENDED_ASCII","test","REGEXP_LATIN_WORD","REGEXP_WORD","replace","word","index","indexOf","_capitalize2","props","getBreadcrumbsFromLocation","location","pathname","splitLocation","split","breadcrumbObj","itemListElement","forEach","element","pathnameBuild","push","position","item","origin","name","titleCase","render","title","description","image","imgWidth","imgHeight","pageUrl","this","postNode","pagePath","postSEO","pageSEO","productSEO","articleSEO","customTitle","siteMetadata","product","siteImage","siteUrl","shareImage","dateModified","Date","keywords","concat","tags","shareImageWidth","shareImageHeight","breadcrumbJson","internal","content","getSrc","heroImage","gatsbyImageData","width","height","publishDate","manufacturer","image_primary","childImageSharp","slug","schemaOrgJSONLD","url","alternateName","potentialAction","target","legalName","logo","foundingDate","address","streetAddress","addressLocality","addressRegion","postalCode","addressCountry","contactPoint","contactType","email","sameAs","telephone","priceRange","openingHours","geo","latitude","longitude","mainEntityOfPage","headline","datePublished","author","publisher","childMarkdownRemark","html","href","Helmet","join","type","JSON","stringify","async","src","property","userTwitter","React","article","posts","node","className","style","overflow","G","alt","background","Link","to","rawMarkdownBody","hrefLang","siteTitle","data","site","allContentfulBlogPost","edges","manufacturers","allContentfulManufacturer","Layout","Seo","map","key","logoImageDark"],"mappings":"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","file":"component---src-pages-index-js-ac94d11a05417a7ba063.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = capitalize;\n\nvar _coerce_to_boolean = require('./helper/boolean/coerce_to_boolean');\n\nvar _coerce_to_boolean2 = _interopRequireDefault(_coerce_to_boolean);\n\nvar _coerce_to_string = require('./helper/string/coerce_to_string');\n\nvar _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Converts the first character of `subject` to upper case. If `restToLower` is `true`, convert the rest of\n * `subject` to lower case.\n *\n * @function capitalize\n * @static\n * @since 1.0.0\n * @memberOf Case\n * @param  {string}  [subject='']        The string to capitalize.\n * @param  {boolean} [restToLower=false] Convert the rest of `subject` to lower case.\n * @return {string}                      Returns the capitalized string.\n * @example\n * v.capitalize('apple');\n * // => 'Apple'\n *\n * v.capitalize('aPPle', true);\n * // => 'Apple'\n */\n\n\nfunction capitalize(subject, restToLower) {\n  var subjectString = (0, _coerce_to_string2.default)(subject);\n  var restToLowerCaseBoolean = (0, _coerce_to_boolean2.default)(restToLower);\n\n  if (subjectString === '') {\n    return '';\n  }\n\n  if (restToLowerCaseBoolean) {\n    subjectString = subjectString.toLowerCase();\n  }\n\n  return subjectString.substr(0, 1).toUpperCase() + subjectString.substr(1);\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = coerceToBoolean;\n\nvar _is_nil = require('../object/is_nil');\n\nvar _is_nil2 = _interopRequireDefault(_is_nil);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Converts the `value` to a boolean. If `value` is `undefined` or `null`, returns `defaultValue`.\n *\n * @ignore\n * @function toBoolean\n * @param {*} value The value to convert.\n * @param {boolean} [defaultValue=false] The default value.\n * @return {boolean} Returns the coercion to boolean.\n */\n\n\nfunction coerceToBoolean(value) {\n  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if ((0, _is_nil2.default)(value)) {\n    return defaultValue;\n  }\n\n  return Boolean(value);\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = titleCase;\n\nvar _const_extended = require('./helper/reg_exp/const_extended');\n\nvar _capitalize = require('./capitalize');\n\nvar _capitalize2 = _interopRequireDefault(_capitalize);\n\nvar _coerce_to_string = require('./helper/string/coerce_to_string');\n\nvar _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Converts the subject to title case.\n *\n * @function titleCase\n * @static\n * @since 1.4.0\n * @memberOf Case\n * @param  {string} [subject=''] The string to convert to title case.\n * @param  {Array}  [noSplit]    Do not split words at the specified characters.\n * @return {string}              Returns the title case string.\n * @example\n * v.titleCase('learning to fly');\n * // => 'Learning To Fly'\n *\n * v.titleCase('jean-luc is good-looking', ['-']);\n * // => 'Jean-luc Is Good-looking'\n */\n\n\nfunction titleCase(subject, noSplit) {\n  var subjectString = (0, _coerce_to_string2.default)(subject);\n  var noSplitArray = Array.isArray(noSplit) ? noSplit : [];\n  var wordsRegExp = _const_extended.REGEXP_EXTENDED_ASCII.test(subjectString) ? _const_extended.REGEXP_LATIN_WORD : _const_extended.REGEXP_WORD;\n  return subjectString.replace(wordsRegExp, function (word, index) {\n    var isNoSplit = index > 0 && noSplitArray.indexOf(subjectString[index - 1]) >= 0;\n    return isNoSplit ? word.toLowerCase() : (0, _capitalize2.default)(word, true);\n  });\n}\n\nmodule.exports = exports['default'];","import Seo from './Seo'\n\nexport default Seo\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { getSrc } from 'gatsby-plugin-image'\nimport titleCase from 'voca/title_case'\n\nclass Seo extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  getBreadcrumbsFromLocation(location) {\n    if (location.pathname === '/') return\n    const splitLocation = location.pathname.split('/')\n    const breadcrumbObj = {\n      '@context': 'https://schema.org',\n      '@type': 'BreadcrumbList',\n      itemListElement: [],\n    }\n    splitLocation.forEach((element, index) => {\n      let pathnameBuild = ''\n\n      if (element !== '') {\n        pathnameBuild = `${pathnameBuild}/${element}`\n        breadcrumbObj.itemListElement.push({\n          '@type': 'ListItem',\n          position: index,\n          item: {\n            '@id': `${location.origin}/${pathnameBuild}`,\n            name: titleCase(element.replace(/\\-/g, ' ')),\n          },\n        })\n      }\n    })\n\n    return breadcrumbObj\n  }\n\n  render() {\n    const {\n      postNode,\n      pagePath,\n      postSEO,\n      pageSEO,\n      productSEO,\n      articleSEO,\n      customTitle,\n      siteMetadata,\n      location,\n      product,\n    } = this.props\n    const siteImage = `${siteMetadata.siteUrl}${siteMetadata.shareImage}`\n    let title\n    let description\n    let image\n    let imgWidth\n    let imgHeight\n    let pageUrl\n    let dateModified = new Date()\n    let keywords = [postNode.title].concat(postNode.tags)\n\n    // Set Default OpenGraph Parameters for Fallback\n    title = siteMetadata.title\n    description = siteMetadata.description\n    image = `${siteMetadata.siteUrl}${siteMetadata.shareImage}`\n    imgWidth = siteMetadata.shareImageWidth\n    imgHeight = siteMetadata.shareImageHeight\n    pageUrl = siteMetadata.siteUrl\n\n    const breadcrumbJson = this.getBreadcrumbsFromLocation(location)\n\n    if (customTitle) {\n      title = postNode.title\n      pageUrl = siteMetadata.siteUrl + '/' + pagePath + '/'\n    }\n\n    // Replace with Page Parameters if post or page\n    if (postSEO || pageSEO) {\n      title = postNode.title\n      description = postNode.description.internal.content\n      if (pagePath.length > 1) {\n        pageUrl = siteMetadata.siteUrl + '/' + pagePath + '/'\n      } else {\n        pageUrl = siteMetadata.siteUrl + '/'\n      }\n    }\n    // Use Hero Image for OpenGraph\n    if (postSEO || articleSEO) {\n      image = `https:${getSrc(postNode.heroImage.gatsbyImageData)}`\n      imgWidth = postNode.heroImage.gatsbyImageData.width\n      imgHeight = postNode.heroImage.gatsbyImageData.height\n      dateModified = postNode.publishDate\n      pageUrl = `${siteMetadata.siteUrl}/${pagePath}/`\n    }\n\n    if (productSEO) {\n      description =\n        product.description === ''\n          ? `${product.manufacturer} product`\n          : product.description\n      image = `${siteMetadata.siteUrl}${getSrc(\n        product.image_primary.childImageSharp.gatsbyImageData\n      )}`\n      imgWidth = product.image_primary.childImageSharp.gatsbyImageData.width\n      imgHeight = product.image_primary.childImageSharp.gatsbyImageData.height\n      dateModified = postNode.publishDate\n      pageUrl = `${siteMetadata.siteUrl}${product.slug}`\n      title = `${product.manufacturer} - ${product.title}`\n    }\n\n    // Default Website Schema\n    const schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'WebSite',\n        url: siteMetadata.siteUrl,\n        name: siteMetadata.title,\n        alternateName: siteMetadata.title,\n        potentialAction: {\n          '@type': 'SearchAction',\n          target: 'https://looparch.com/search/?s={search_term_string}',\n          'query-input': 'required name=search_term_string',\n        },\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'Organization',\n        name: siteMetadata.title,\n        legalName: `${siteMetadata.title}, LLC`,\n        url: siteMetadata.siteUrl,\n        logo: siteImage,\n        foundingDate: '2009',\n        address: {\n          '@type': 'PostalAddress',\n          streetAddress: '3110 N 16th Street',\n          addressLocality: 'Phoenix',\n          addressRegion: 'AZ',\n          postalCode: '85016',\n          addressCountry: 'USA',\n        },\n        contactPoint: {\n          '@type': 'ContactPoint',\n          contactType: 'sales',\n          email: 'info@looparch.com',\n          url: `${siteMetadata.siteUrl}/contact/`,\n        },\n        sameAs: [\n          'https://www.instagram.com/looparchitecturalmaterials/',\n          'https://www.facebook.com/looparch/',\n        ],\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'LocalBusiness',\n        address: {\n          '@type': 'PostalAddress',\n          streetAddress: '3110 N 16th Street',\n          addressLocality: 'Phoenix',\n          addressRegion: 'AZ',\n          postalCode: '85016',\n          addressCountry: 'USA',\n        },\n        telephone: '602-810-1502',\n        image: siteImage,\n        priceRange: '$$$',\n        description: `${siteMetadata.description}`,\n        name: siteMetadata.title,\n        openingHours: 'Mo,Tu,We,Th,Fr 09:00-17:00',\n        geo: {\n          '@type': 'GeoCoordinates',\n          latitude: '33.484319',\n          longitude: '-112.047970',\n        },\n        sameAs: [\n          'https://www.instagram.com/looparchitecturalmaterials/',\n          'https://www.facebook.com/looparch/',\n          'https://www.pinterest.com/looparchitecturalmaterials',\n        ],\n      },\n    ]\n\n    // Blog Post Schema\n    if (postSEO) {\n      schemaOrgJSONLD.push({\n        '@context': 'http://schema.org',\n        '@type': 'NewsArticle',\n        mainEntityOfPage: {\n          '@type': 'WebPage',\n          url: pageUrl,\n        },\n        headline: title,\n        image: [image],\n        datePublished: postNode.publishDate,\n        dateModified: dateModified,\n        author: {\n          '@type': 'Person',\n          name: siteMetadata.publisher,\n          url: siteMetadata.siteUrl,\n        },\n        publisher: {\n          '@type': 'Organization',\n          name: siteMetadata.publisher,\n          url: siteMetadata.siteUrl,\n          logo: {\n            '@type': 'ImageObject',\n            name: 'Loop Architectural Materials Logo',\n            width: `600`,\n            height: `60`,\n            url: `${siteMetadata.siteUrl}${siteMetadata.shareImage}`,\n          },\n        },\n        description: postNode.description.childMarkdownRemark.html,\n      })\n    }\n\n    // Page SEO Schema\n    if (pageSEO) {\n      schemaOrgJSONLD.push({\n        '@context': 'http://schema.org',\n        '@type': 'WebPage',\n        url: location.href,\n        name: title,\n        description: description,\n      })\n    }\n\n    if (breadcrumbJson) {\n      schemaOrgJSONLD.push(breadcrumbJson)\n    }\n\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"keywords\" content={keywords.join(',')} />\n        <meta name=\"image\" content={image} />\n        <meta name=\"description\" content={description} />\n        <meta name=\"application-name\" content=\"Loop Architectural Materials\" />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        <script\n          async\n          src=\"https://chimpstatic.com/mcjs-connected/js/users/6236ae131b11b8506326eed86/943d564cd0b36996e264a468a.js\"\n        ></script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:title\" content={title} />\n        {postSEO ? (\n          <meta property=\"og:type\" content=\"article\" />\n        ) : (\n          <meta property=\"og:type\" content=\"article\" />\n        )}\n        <meta\n          property=\"article:author\"\n          content=\"Loop Architectural Materials\"\n        />\n        <meta\n          property=\"article:published_time\"\n          content={postNode.publishDate}\n        />\n        <meta property=\"og:url\" content={pageUrl} />\n        <meta property=\"og:image\" content={image} />\n        <meta property=\"og:image:width\" content={imgWidth} />\n        <meta property=\"og:image:height\" content={imgHeight} />\n        <meta property=\"og:description\" content={description} />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={siteMetadata.userTwitter ? siteMetadata.userTwitter : ''}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:image\" content={image} />\n        <meta name=\"twitter:description\" content={description} />\n      </Helmet>\n    )\n  }\n}\n\nexport default Seo\n","import IndexHero from './IndexHero'\n\nexport default IndexHero\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nconst IndexHero = ({ posts }) => {\n  const article = posts[0].node\n\n  return (\n    <div className=\"hero is-large is-relative\" style={{ overflow: 'hidden' }}>\n      <GatsbyImage\n        image={article.heroImage.gatsbyImageData}\n        alt={article.heroImage.title}\n        style={{\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n        }}\n      />\n      <section className=\"hero-body\">\n        <div className=\"is-overlay\" style={{ background: 'rgba(0,0,0,.3)' }} />\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title is-size-1\">\n            <Link\n              to={`/articles/${article.slug}`}\n              className=\"has-text-white has-text-weight-bold has-text-white\"\n            >\n              {article.title}\n            </Link>\n          </h1>\n          <p className=\"subtitle is-size-3 has-text-white has-text-weight-light\">\n            {article.description.childMarkdownRemark.rawMarkdownBody}\n          </p>\n          <Link\n            to={`/articles/${article.slug}`}\n            className=\"button is-primary\"\n            hrefLang=\"en\"\n          >\n            Read More\n          </Link>\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default IndexHero\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { Helmet } from 'react-helmet'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport IndexHero from '../components/IndexHero'\nimport Seo from '../components/Seo'\n\nclass RootIndex extends React.Component {\n  render() {\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const posts = this.props.data.allContentfulBlogPost.edges\n    const manufacturers = this.props.data.allContentfulManufacturer.edges\n    const postNode = {\n      title: this.props.data.site.siteMetadata.title,\n      description: {\n        internal: {\n          content: this.props.data.site.siteMetadata.description,\n        },\n      },\n    }\n\n    return (\n      <Layout>\n        <div className=\"content-section\">\n          <Seo\n            pagePath={``}\n            postNode={postNode}\n            pageSEO\n            siteMetadata={this.props.data.site.siteMetadata}\n            location={this.props.location}\n          />\n          <Helmet title={siteTitle}>\n            <meta property=\"og:type\" content=\"website\" />\n          </Helmet>\n          <IndexHero posts={posts} />\n\n          <section className=\"hero is-white\">\n            <div className=\"hero-body\">\n              <div className=\"container\">\n                <h2 className=\"title\">Pioneering Materials</h2>\n                <p>\n                  Loop carefully curates it’s stable of lines to bring you the\n                  newest, highest quality and most innovative products\n                  available.\n                </p>\n                <p>\n                  Make your next project more distinctive with materials others\n                  miss.\n                </p>\n              </div>\n            </div>\n          </section>\n\n          <section className=\"hero is-white\">\n            <div className=\"hero-body\">\n              <div className=\"container\">\n                <h2 className=\"title\">Project Diversity</h2>\n                <p>\n                  Our lines represent a large spectrum of possibilities. Loop\n                  provides solutions for Healthcare, Hospitality, Corporate,\n                  Civic, Cultural, Education, Retail, Residential, Liturgical,\n                  or any other scenario your project brings to the table.\n                </p>\n              </div>\n            </div>\n          </section>\n\n          <section className=\"hero is-white\">\n            <div className=\"hero-body\">\n              <div className=\"container\">\n                <h2 className=\"title\">End to End Support</h2>\n                <p>\n                  Your projects are <strong>our</strong> projects. Understanding\n                  the process is a big part of what we do. Loop supports all\n                  your efforts at every waypoint from concept to completion – on\n                  every project from tiny to tremendous.\n                </p>\n              </div>\n            </div>\n          </section>\n          <section className=\"hero is-white\">\n            <div className=\"hero-body\">\n              <div className=\"container\">\n                <h2 className=\"title\">Our Manufacturers</h2>\n                <div className=\"columns is-multiline is-variable is-8 is-centered\">\n                  {manufacturers.map(({ node }) => {\n                    return (\n                      <div\n                        key={node.slug}\n                        className=\"column is-inline-block is-one-quarter is-half-tablet is-half-mobile mb-4\"\n                      >\n                        <Link to={`/manufacturers/${node.slug}`} hrefLang=\"en\">\n                          <GatsbyImage\n                            image={node.logoImageDark.gatsbyImageData}\n                            alt={node.logoImageDark.description}\n                          />\n                        </Link>\n                      </div>\n                    )\n                  })}\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default RootIndex\n\nexport const pageQuery = graphql`\n  query HomeQuery {\n    allContentfulBlogPost(\n      limit: 1\n      sort: { fields: [publishDate], order: DESC }\n    ) {\n      edges {\n        node {\n          description {\n            childMarkdownRemark {\n              html\n              rawMarkdownBody\n            }\n          }\n          heroImage {\n            gatsbyImageData\n          }\n          publishDate(formatString: \"MMMM Do, YYYY\")\n          slug\n          tags\n          title\n          useLightText\n        }\n      }\n    }\n    allContentfulManufacturer(sort: { fields: [title], order: ASC }) {\n      edges {\n        node {\n          title\n          slug\n          logoImageDark {\n            description\n            gatsbyImageData(width: 300, quality: 100)\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        description\n        publisher\n        shareImage\n        shareImageHeight\n        shareImageWidth\n        siteUrl\n        title\n        userTwitter\n      }\n    }\n  }\n`\n"],"sourceRoot":""}