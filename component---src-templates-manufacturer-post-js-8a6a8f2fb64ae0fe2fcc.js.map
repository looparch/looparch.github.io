{"version":3,"sources":["webpack://loop-gatsby/./node_modules/voca/helper/number/clip_number.js","webpack://loop-gatsby/./node_modules/voca/helper/number/const.js","webpack://loop-gatsby/./node_modules/voca/helper/number/to_integer.js","webpack://loop-gatsby/./node_modules/voca/truncate.js","webpack://loop-gatsby/./src/components/SEOProduct/generateMarkdownProductJSONLD.js","webpack://loop-gatsby/./src/components/md-product-preview.js","webpack://loop-gatsby/./src/templates/manufacturer-post.js"],"names":["Object","defineProperty","exports","value","default","downLimit","upLimit","module","MAX_SAFE_INTEGER","Infinity","_const","subject","length","end","subjectString","_coerce_to_string2","lengthInt","_is_nil2","_clip_number2","_to_integer2","endString","substr","_interopRequireDefault","obj","__esModule","generateMarkdownProductJSONLD","product","manufacturer","siteMetadata","name","frontmatter","title","image","siteUrl","getSrc","image_primary","childImageSharp","gatsbyImageData","description","unescape","sku","id","mpn","review","reviewRating","ratingValue","bestRating","author","publisher","url","aggregateRating","reviewCount","brand","logo","logoImageDark","offers","price","priceCurrency","priceValidUntil","availability","slug","props","render","this","post","VariableImage","G","alt","className","Link","to","hrefLang","rel","truncate","React","groupedProducts","data","allMarkdownRemark","firstGroup","slice","localProductGroups","uniqueProductGroups","map","productGroup","groupName","titleCase","fieldValue","replace","push","anchor","Set","state","windowHeight","productGroups","iterableGroups","scrollToId","e","stopPropagation","el","document","getElementById","window","scrollTo","offsetLeft","offsetTop","offsetHeight","componentDidMount","setState","site","siteTitle","contentfulManufacturer","manufacturers","allContentfulManufacturer","edges","Helmet","pageSEO","pagePath","postNode","location","heroImage","dangerouslySetInnerHTML","__html","childMarkdownRemark","html","href","target","node","iterator","key","onClick","style","position","top","background","zIndex","display","nodes","fm","path","pathname","padding","section","recaptchaKey"],"mappings":"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","file":"component---src-templates-manufacturer-post-js-8a6a8f2fb64ae0fe2fcc.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = clipNumber;\n/**\n * Clip the number to interval `downLimit` to `upLimit`.\n *\n * @ignore\n * @function clipNumber\n * @param {number} value The number to clip\n * @param {number} downLimit The down limit\n * @param {number} upLimit The upper limit\n * @return {number} The clipped number\n */\n\nfunction clipNumber(value, downLimit, upLimit) {\n  if (value <= downLimit) {\n    return downLimit;\n  }\n\n  if (value >= upLimit) {\n    return upLimit;\n  }\n\n  return value;\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Max save integer value\n *\n * @ignore\n * @type {number}\n */\n\nvar MAX_SAFE_INTEGER = exports.MAX_SAFE_INTEGER = 0x1fffffffffffff;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toInteger;\n\nvar _const = require('./const');\n/**\n * Transforms `value` to an integer.\n *\n * @ignore\n * @function toInteger\n * @param {number} value The number to transform.\n * @returns {number} Returns the transformed integer.\n */\n\n\nfunction toInteger(value) {\n  if (value === Infinity) {\n    return _const.MAX_SAFE_INTEGER;\n  }\n\n  if (value === -Infinity) {\n    return -_const.MAX_SAFE_INTEGER;\n  }\n\n  return ~~value;\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = truncate;\n\nvar _clip_number = require('./helper/number/clip_number');\n\nvar _clip_number2 = _interopRequireDefault(_clip_number);\n\nvar _coerce_to_string = require('./helper/string/coerce_to_string');\n\nvar _coerce_to_string2 = _interopRequireDefault(_coerce_to_string);\n\nvar _is_nil = require('./helper/object/is_nil');\n\nvar _is_nil2 = _interopRequireDefault(_is_nil);\n\nvar _const = require('./helper/number/const');\n\nvar _to_integer = require('./helper/number/to_integer');\n\nvar _to_integer2 = _interopRequireDefault(_to_integer);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Truncates `subject` to a new `length`.\n *\n * @function truncate\n * @static\n * @since 1.0.0\n * @memberOf Chop\n * @param  {string} [subject=''] The string to truncate.\n * @param  {int}    length       The length to truncate the string.\n * @param  {string} [end='...']  The string to be added at the end.\n * @return {string}              Returns the truncated string.\n * @example\n * v.truncate('Once upon a time', 7);\n * // => 'Once...'\n *\n * v.truncate('Good day, Little Red Riding Hood', 14, ' (...)');\n * // => 'Good day (...)'\n *\n * v.truncate('Once upon', 10);\n * // => 'Once upon'\n */\n\n\nfunction truncate(subject, length, end) {\n  var subjectString = (0, _coerce_to_string2.default)(subject);\n  var lengthInt = (0, _is_nil2.default)(length) ? subjectString.length : (0, _clip_number2.default)((0, _to_integer2.default)(length), 0, _const.MAX_SAFE_INTEGER);\n  var endString = (0, _coerce_to_string2.default)(end, '...');\n\n  if (lengthInt >= subjectString.length) {\n    return subjectString;\n  }\n\n  return subjectString.substr(0, length - endString.length) + endString;\n}\n\nmodule.exports = exports['default'];","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { getSrc } from 'gatsby-plugin-image'\n\nexport default function generateMarkdownProductJSONLD(\n  product,\n  manufacturer,\n  siteMetadata\n) {\n  return {\n    '@context': 'http://schema.org',\n    '@type': 'Product',\n    name: product.frontmatter.title,\n    image: [\n      `${siteMetadata.siteUrl}${getSrc(\n        product.frontmatter.image_primary.childImageSharp.gatsbyImageData\n      )}`,\n    ],\n    description: `${\n      unescape(product.frontmatter.description) ||\n      `${product.frontmatter.manufacturer} - ${product.frontmatter.title}` ||\n      ''\n    }`,\n    sku: `${product.id}`,\n    mpn: `${product.id}`,\n    review: {\n      '@type': 'Review',\n      reviewRating: {\n        '@type': 'Rating',\n        ratingValue: '5',\n        bestRating: '5',\n      },\n      author: {\n        '@type': 'Person',\n        name: siteMetadata.publisher,\n        url: siteMetadata.siteUrl,\n      },\n    },\n    aggregateRating: {\n      '@type': 'AggregateRating',\n      ratingValue: '5',\n      reviewCount: '1',\n    },\n    brand: {\n      '@type': 'Brand',\n      name: manufacturer.title,\n      logo: `https:${getSrc(manufacturer.logoImageDark.gatsbyImageData)}`,\n    },\n    offers: {\n      '@type': 'Offer',\n      price: '1.00',\n      priceCurrency: 'USD',\n      priceValidUntil: '2020-01-01',\n      availability: 'InStock',\n      url: `${siteMetadata.siteUrl}${product.frontmatter.slug}`,\n    },\n  }\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport truncate from 'voca/truncate'\n\nimport styles from './product-preview.sass'\n\nclass MdProductPreviewTemplate extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const product = this.props.product\n    const post = this.props.post\n\n    const description = product.description || product.title\n\n    const VariableImage = (\n      <GatsbyImage\n        image={product.image_primary.childImageSharp.gatsbyImageData}\n        alt={description}\n        title={`${post.title} ${product.title}`}\n        className={`image product-preview-image fluid`}\n      />\n    )\n\n    return (\n      <article className={`product-preview ${post.slug}`} id={product.title}>\n        <Link to={product.slug} hrefLang=\"en\" rel=\"help\">\n          <div>{VariableImage}</div>\n          <h3 className=\"is-size-6\">{truncate(product.title, 22)}</h3>\n        </Link>\n      </article>\n    )\n  }\n}\nexport default MdProductPreviewTemplate\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { graphql } from 'gatsby'\nimport titleCase from 'voca/title_case'\n\nimport MdProductPreview from '../components/md-product-preview'\nimport FormFormspree from '../components/form-formspree'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport generateMarkdownProductJSONLD from '../components/SEOProduct/generateMarkdownProductJSONLD'\n\nimport styles from './manufacturer-post.sass'\n\nclass ManufacturerPostTemplate extends React.Component {\n  constructor(props) {\n    super(props)\n\n    const groupedProducts = this.props.data.allMarkdownRemark.groupedProducts\n    const firstGroup = groupedProducts.slice(0, 1)\n    let localProductGroups = []\n    let uniqueProductGroups = []\n    groupedProducts.map((productGroup) => {\n      const groupName = titleCase(productGroup.fieldValue.replace(/\\-/g, ' '))\n\n      localProductGroups.push({\n        name: groupName,\n        anchor: productGroup.fieldValue,\n      })\n      uniqueProductGroups = [...new Set(localProductGroups)]\n    })\n    this.state = {\n      windowHeight: 1000,\n      productGroups: uniqueProductGroups,\n      iterableGroups: firstGroup,\n      groupedProducts,\n    }\n  }\n\n  scrollToId(id, e) {\n    e.stopPropagation()\n    const el = document.getElementById(id)\n    window.scrollTo(el.offsetLeft, el.offsetTop + el.offsetHeight)\n  }\n\n  componentDidMount() {\n    this.setState({ iterableGroups: this.state.groupedProducts })\n  }\n\n  render() {\n    const siteMetadata = this.props.data.site.siteMetadata\n    const siteTitle = siteMetadata.title\n    const post = this.props.data.contentfulManufacturer\n    const groupedProducts =\n      this.props.data.allMarkdownRemark.groupedProducts || []\n    const manufacturers = this.props.data.allContentfulManufacturer || {\n      edges: [],\n    }\n\n    return (\n      <Layout>\n        <Helmet title={`${post.title} | ${siteTitle}`} />\n        <SEO\n          pageSEO\n          pagePath={`manufacturers/${post.slug}`}\n          siteMetadata={siteMetadata}\n          postNode={post}\n          location={this.props.location}\n        />\n\n        <h1 className=\"is-sr-only\">{`${post.title} | ${siteTitle}`}</h1>\n        <section className=\"section\" id=\"manufacturer-post\">\n          <div className=\"container\">\n            <div className=\"columns is-multiline is-variable is-6\">\n              <div className=\"column is-one-third\">\n                <GatsbyImage\n                  image={post.logoImageDark.gatsbyImageData}\n                  alt={post.logoImageDark.title}\n                  title={post.logoImageDark.title}\n                  className=\"image\"\n                />\n                <br />\n                <br />\n                <GatsbyImage\n                  image={post.heroImage.gatsbyImageData}\n                  alt={post.heroImage.title}\n                  title={post.heroImage.title}\n                  className=\"image\"\n                />\n                <br />\n                <br />\n                <div\n                  className=\"content\"\n                  dangerouslySetInnerHTML={{\n                    __html: post.description.childMarkdownRemark.html,\n                  }}\n                />\n                <div className=\"content\">\n                  <div className=\"field is-grouped\">\n                    <p className=\"control no-print\">\n                      <a\n                        href={post.url}\n                        target=\"_blank\"\n                        className=\"button is-primary\"\n                        rel=\"noopener\"\n                      >\n                        <span>Visit {post.title}</span>\n                      </a>\n                    </p>\n                    <p className=\"control no-print\">\n                      <a href=\"#inquiry\" className=\"button is-secondary\">\n                        <span>Inquire</span>\n                      </a>\n                    </p>\n                  </div>\n                  <br />\n                  <div className=\"tags\">\n                    {this.state.productGroups.map((node, iterator) => {\n                      return (\n                        <span\n                          className=\"tag\"\n                          key={iterator}\n                          onClick={(e) => this.scrollToId(node.anchor, e)}\n                        >\n                          <a>{node.name}</a>\n                        </span>\n                      )\n                    })}\n                  </div>\n                </div>\n              </div>\n              <div className=\"column is-marginless\">\n                {this.state.groupedProducts.map((productGroup, iterator) => {\n                  const groupName = titleCase(\n                    productGroup.fieldValue.replace(/\\-/g, ' ')\n                  )\n                  return (\n                    <div key={iterator}>\n                      <div\n                        id={productGroup.fieldValue}\n                        className=\"column is-full is-marginless\"\n                        style={{\n                          position: 'sticky',\n                          top: '65px',\n                          background: '#FFF',\n                          zIndex: '25',\n                          display: 'block',\n                        }}\n                      >\n                        <h2\n                          className=\"title is-size-4\"\n                          style={{\n                            background: '#FFF',\n                            display: 'block',\n                          }}\n                        >\n                          {groupName}\n                        </h2>\n                      </div>\n                      {productGroup.nodes.map((product) => {\n                        const fm = product.frontmatter\n                        const jsonLd = generateMarkdownProductJSONLD(\n                          product,\n                          post,\n                          siteMetadata\n                        )\n                        return (\n                          <div\n                            key={product.id}\n                            className=\"column is-inline-block is-one-third-desktop is-half-tablet is-half-mobile\"\n                            style={{ zIndex: '500' }}\n                          >\n                            <MdProductPreview\n                              product={fm}\n                              post={post}\n                              siteMetadata={siteMetadata}\n                              path={this.props.location.pathname}\n                            />\n                          </div>\n                        )\n                      })}\n                    </div>\n                  )\n                })}\n                <section\n                  id=\"inquiry\"\n                  className=\"column is-full inquiry-section no-print\"\n                >\n                  <div\n                    style={{\n                      position: 'sticky',\n                      top: '65px',\n                      background: '#FFF',\n                      zIndex: '25',\n                      display: 'block',\n                      padding: '0.75rem 0.75rem 0.75rem 0',\n                    }}\n                  >\n                    <h3 className=\"title is-size-4\">{post.title} Inquiries</h3>\n                  </div>\n                  <FormFormspree\n                    section={post.title}\n                    manufacturers={manufacturers}\n                    recaptchaKey={siteMetadata.recaptchaKey}\n                  />\n                </section>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nexport default ManufacturerPostTemplate\n\nexport const pageQuery = graphql`\n  query ManufacturerPostBySlug($slug: String!, $title: String!) {\n    contentfulManufacturer(slug: { eq: $slug }) {\n      title\n      slug\n      tags\n      url\n      publishDate\n      resizeImages\n      description {\n        childMarkdownRemark {\n          html\n        }\n        internal {\n          content\n        }\n      }\n      heroImage {\n        title\n        description\n        gatsbyImageData\n      }\n      logoImageDark {\n        title\n        description\n        gatsbyImageData\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { manufacturer: { eq: $title } } }\n      sort: { fields: [frontmatter___title] }\n    ) {\n      tags: distinct(field: frontmatter___tags)\n      groupedProducts: group(field: frontmatter___category) {\n        fieldValue\n        nodes {\n          id\n          frontmatter {\n            title\n            category\n            description\n            designer\n            href\n            manufacturer\n            subtitle\n            tags\n            slug\n            date\n            image_primary {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 300\n                  height: 300\n                  placeholder: BLURRED\n                  transformOptions: { fit: COVER, cropFocus: ATTENTION }\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n    allContentfulManufacturer(sort: { fields: [title] }) {\n      edges {\n        node {\n          id\n          title\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        description\n        publisher\n        recaptchaKey\n        shareImage\n        shareImageHeight\n        shareImageWidth\n        siteUrl\n        title\n        userTwitter\n      }\n    }\n  }\n`\n"],"sourceRoot":""}