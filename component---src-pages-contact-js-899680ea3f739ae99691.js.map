{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./src/components/form-contact.js","webpack:///./src/components/seo.js","webpack:///./src/components/map.js"],"names":["ContactPage","render","siteMetadata","this","props","data","site","siteTitle","title","manufacturers","allContentfulManufacturer","edges","className","pagePath","postNode","description","internal","content","pageSEO","API_KEY","mapKey","PLACE_ID","placeId","section","recaptchaKey","React","Component","FormContact","handleChange","e","setState","target","name","value","handleRecaptcha","document","getElementById","classList","add","handleSubmit","form","preventDefault","fetch","method","headers","Accept","state","Object","keys","map","key","encodeURIComponent","join","then","navigate","getAttribute","catch","error","console","log","email","manufacturer","message","componentDidMount","sectionName","action","data-netlify","data-netlify-recaptcha","onSubmit","htmlFor","id","type","autoComplete","onChange","required","defaultValue","node","placeholder","SEO","image","imgWidth","imgHeight","pageUrl","postSEO","articleSEO","customTitle","products","location","siteImage","siteUrl","shareImage","dateModified","Date","keywords","concat","tags","shareImageWidth","shareImageHeight","split","length","getSrc","heroImage","gatsbyImageData","width","height","publishDate","schemaOrgJSONLD","url","alternateName","potentialAction","legalName","logo","foundingDate","address","streetAddress","addressLocality","addressRegion","postalCode","addressCountry","contactPoint","contactType","sameAs","telephone","priceRange","openingHours","geo","latitude","longitude","push","itemListElement","position","item","mainEntityOfPage","headline","datePublished","author","publisher","childMarkdownRemark","html","forEach","edge","product","productImage","file","sku","contentful_id","mpn","review","reviewRating","ratingValue","bestRating","aggregateRating","reviewCount","brand","fixed","src","offers","price","priceCurrency","priceValidUntil","availability","JSON","stringify","async","property","userTwitter","GoogleMap","LOOPARCH_MAPS_KEY","defer","css","display"],"mappings":"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","file":"component---src-pages-contact-js-899680ea3f739ae99691.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\nimport { Helmet } from 'react-helmet'\nimport { graphql } from 'gatsby'\n\nimport GoogleMap from '../components/map'\nimport FormContact from '../components/form-contact'\nimport SEO from '../components/seo'\n\nclass ContactPage extends React.Component {\n  render() {\n    const siteMetadata = this.props.data.site.siteMetadata\n    const siteTitle = siteMetadata.title\n    const manufacturers = this.props.data.allContentfulManufacturer || {\n      edges: [],\n    }\n    const postNode = {\n      title: 'Contact Us',\n      description: {\n        internal: {\n          content: 'We would love to hear from you.',\n        },\n      },\n    }\n\n    return (\n      <Layout>\n        <div className=\"content-section\">\n          <Helmet title={`${siteTitle} | Contact Us`} />\n          <SEO\n            pagePath={`contact`}\n            postNode={postNode}\n            pageSEO\n            siteMetadata={this.props.data.site.siteMetadata}\n          />\n          <GoogleMap\n            API_KEY={this.props.data.site.siteMetadata.mapKey}\n            PLACE_ID={this.props.data.site.siteMetadata.placeId}\n          />\n          <section className=\"section\">\n            <div className=\"container\">\n              <h1 className=\"title is-size-4\"> Contact Us </h1>\n              <div className=\"columns\">\n                <div className=\"column is-two-thirds\">\n                  <FormContact\n                    section=\"Contact Us\"\n                    manufacturers={manufacturers}\n                    recaptchaKey={siteMetadata.recaptchaKey}\n                  />\n                </div>\n                <div className=\"column\">\n                  <div className=\"content\">\n                    <p>\n                      We’d love to hear from you. If you’re interested in\n                      receiving samples, scheduling a presentation or talking to\n                      us about any of our product lines, feel free to fill out\n                      the form.\n                    </p>\n                    <p>Our showroom address is:</p>\n                    <p>\n                      <strong> Loop Architectural Materials </strong> <br />\n                      3110 N 16 th Street <br />\n                      Phoenix, AZ 85016\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default ContactPage\n\nexport const pageQuery = graphql`\n  query ContactQuery {\n    allContentfulManufacturer(sort: { fields: [title] }) {\n      edges {\n        node {\n          id\n          title\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        description\n        shareImage\n        shareImageWidth\n        shareImageHeight\n        publisher\n        mapKey\n        placeId\n        recaptchaKey\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { navigate } from 'gatsby'\nimport Recaptcha from 'react-google-recaptcha'\n\nfunction encode(data) {\n  return Object.keys(data)\n    .map((key) => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\n    .join('&')\n}\n\nclass FormContact extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: '',\n      email: '',\n      manufacturer: this.props.section || 'Contact Us',\n      message: '',\n      // 'g-recaptcha-response': null,\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      manufacturer: this.props.section || 'Contact Us',\n    })\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  handleRecaptcha = (value) => {\n    this.setState({ 'g-recaptcha-response': value })\n    document.getElementById('recapchta-message').classList.add('is-hidden')\n  }\n\n  handleSubmit = (e) => {\n    const form = e.target\n\n    e.preventDefault()\n\n    // if (!this.state['g-recaptcha-response']) {\n    //   return document\n    //     .getElementById('recapchta-message')\n    //     .classList.remove('is-hidden')\n    // }\n\n    fetch('https://formspree.io/f/mvovekjn', {\n      method: 'POST',\n      headers: { Accept: 'application/json' },\n      data: encode({\n        // 'form-name': form.getAttribute('name'),\n        ...this.state,\n      }),\n    })\n      .then(() => {\n        navigate(form.getAttribute('action'))\n      })\n      .catch((error) => console.log(error))\n  }\n\n  render() {\n    const sectionName = this.props.section || 'Contact Us'\n    const manufacturers = this.props.manufacturers.edges\n    const recaptchaKey = this.props.recaptchaKey\n\n    return (\n      <form\n        name=\"contact\"\n        method=\"POST\"\n        action=\"/thanks\"\n        data-netlify=\"true\"\n        data-netlify-recaptcha=\"true\"\n        onSubmit={this.handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"name\">\n            Your Name:\n          </label>\n          <div className=\"control\">\n            <input\n              id=\"name\"\n              className=\"input\"\n              type=\"text\"\n              name=\"name\"\n              autoComplete=\"name\"\n              onChange={this.handleChange}\n              required\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"email\">\n            Your Email:\n          </label>\n          <div className=\"control\">\n            <input\n              id=\"email\"\n              className=\"input\"\n              type=\"email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              onChange={this.handleChange}\n              required\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"manufacturer\">\n            Manufacturer:\n          </label>\n          <div className=\"control\">\n            <span className=\"select\">\n              <select\n                id=\"manufacturer\"\n                name=\"manufacturer\"\n                defaultValue={sectionName}\n                onChange={this.handleChange}\n              >\n                {manufacturers.map(({ node }) => {\n                  return (\n                    <option key={node.id} value={node.title}>\n                      {node.title}\n                    </option>\n                  )\n                })}\n              </select>\n            </span>\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"message\">\n            Message:\n          </label>\n          <div className=\"control\">\n            <textarea\n              id=\"message\"\n              className=\"textarea\"\n              name=\"message\"\n              onChange={this.handleChange}\n              placeholder={`Your message...`}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"project_name\">\n            Project Name (if applicable):\n          </label>\n          <div className=\"control\">\n            <input\n              id=\"project_name\"\n              className=\"input\"\n              type=\"text\"\n              name=\"project_name\"\n              onChange={this.handleChange}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"project_specifier\">\n            Project Specifier (if applicable):\n          </label>\n          <div className=\"control\">\n            <input\n              id=\"project_specifier\"\n              className=\"input\"\n              type=\"text\"\n              name=\"project_specifier\"\n              onChange={this.handleChange}\n            />\n          </div>\n        </div>\n        {/* <div className=\"field\">\n          <Recaptcha\n            ref=\"recaptcha\"\n            sitekey={recaptchaKey}\n            onChange={this.handleRecaptcha}\n            required\n          />\n          <div\n            className=\"is-hidden is-inline-block notification is-danger\"\n            id=\"recapchta-message\"\n          >\n            Recaptcha is required.\n          </div>\n        </div> */}\n        <div className=\"field\">\n          <div className=\"control\">\n            <button type=\"submit\" className=\"button is-link\">\n              Send\n            </button>\n          </div>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default FormContact\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { getSrc } from 'gatsby-plugin-image'\n\nclass SEO extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const {\n      postNode,\n      pagePath,\n      postSEO,\n      pageSEO,\n      articleSEO,\n      customTitle,\n      siteMetadata,\n      location,\n      products,\n    } = this.props\n    const siteImage = `${siteMetadata.siteUrl}${siteMetadata.shareImage}`\n    let title\n    let description\n    let image\n    let imgWidth\n    let imgHeight\n    let pageUrl\n    let dateModified = new Date()\n    let keywords = [postNode.title].concat(postNode.tags)\n\n    // Set Default OpenGraph Parameters for Fallback\n    title = siteMetadata.title\n    description = siteMetadata.description\n    image = `${siteMetadata.siteUrl}${siteMetadata.shareImage}`\n    imgWidth = siteMetadata.shareImageWidth\n    imgHeight = siteMetadata.shareImageHeight\n    pageUrl = siteMetadata.siteUrl\n\n    if (customTitle) {\n      title = postNode.title\n      pageUrl = siteMetadata.siteUrl + '/' + pagePath + '/'\n    }\n\n    // Replace with Page Parameters if post or page\n    if (postSEO || pageSEO) {\n      title = postNode.title\n      description = postNode.description.internal.content.split('\\n')[0]\n      if (pagePath.length > 1) {\n        pageUrl = siteMetadata.siteUrl + '/' + pagePath + '/'\n      } else {\n        pageUrl = siteMetadata.siteUrl + '/'\n      }\n    }\n    // Use Hero Image for OpenGraph\n    if (postSEO || articleSEO) {\n      image = `https:${getSrc(postNode.heroImage.gatsbyImageData)}`\n      imgWidth = postNode.heroImage.gatsbyImageData.width\n      imgHeight = postNode.heroImage.gatsbyImageData.height\n      dateModified = postNode.publishDate\n      pageUrl = `${siteMetadata.siteUrl}/${pagePath}/`\n    }\n\n    // Default Website Schema\n    const schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'WebSite',\n        url: siteMetadata.siteUrl,\n        name: siteMetadata.title,\n        alternateName: siteMetadata.title,\n        potentialAction: {\n          '@type': 'SearchAction',\n          target: 'https://looparch.com/search/?s={search_term_string}',\n          'query-input': 'required name=search_term_string',\n        },\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'Organization',\n        name: siteMetadata.title,\n        legalName: `${siteMetadata.title}, LLC`,\n        url: siteMetadata.siteUrl,\n        logo: siteImage,\n        foundingDate: '2009',\n        address: {\n          '@type': 'PostalAddress',\n          streetAddress: '3110 N 16th Street',\n          addressLocality: 'Phoenix',\n          addressRegion: 'AZ',\n          postalCode: '85016',\n          addressCountry: 'USA',\n        },\n        contactPoint: {\n          '@type': 'ContactPoint',\n          contactType: 'sales',\n          email: 'info@looparch.com',\n          url: `${siteMetadata.siteUrl}/contact/`,\n        },\n        sameAs: [\n          'https://www.instagram.com/looparchitecturalmaterials/',\n          'https://www.facebook.com/looparch/',\n        ],\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'LocalBusiness',\n        address: {\n          '@type': 'PostalAddress',\n          streetAddress: '3110 N 16th Street',\n          addressLocality: 'Phoenix',\n          addressRegion: 'AZ',\n          postalCode: '85016',\n          addressCountry: 'USA',\n        },\n        telephone: '602-810-1502',\n        image: siteImage,\n        priceRange: '$$$',\n        description: `${siteMetadata.description}`,\n        name: siteMetadata.title,\n        openingHours: 'Mo,Tu,We,Th,Fr 09:00-17:00',\n        geo: {\n          '@type': 'GeoCoordinates',\n          latitude: '33.484319',\n          longitude: '-112.047970',\n        },\n        sameAs: [\n          'https://www.instagram.com/looparchitecturalmaterials/',\n          'https://www.facebook.com/looparch/',\n          'https://www.pinterest.com/looparchitecturalmaterials',\n        ],\n      },\n    ]\n\n    // Blog Post Schema\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BreadcrumbList',\n          itemListElement: [\n            {\n              '@type': 'ListItem',\n              position: 1,\n              item: {\n                '@id': siteMetadata.siteUrl,\n                name: siteMetadata.title,\n              },\n            },\n            {\n              '@type': 'ListItem',\n              position: 2,\n              item: {\n                '@id': `${siteMetadata.siteUrl}/${\n                  this.props.pagePath.split('/')[0]\n                }/`,\n                name: `${this.props.pagePath.split('/')[0]}`,\n              },\n            },\n            {\n              '@type': 'ListItem',\n              position: 3,\n              item: {\n                '@id': pageUrl,\n                name: title,\n              },\n            },\n          ],\n        },\n        {\n          '@context': 'http://schema.org',\n          '@type': 'NewsArticle',\n          mainEntityOfPage: {\n            '@type': 'WebPage',\n            url: pageUrl,\n          },\n          headline: title,\n          image: [image],\n          datePublished: postNode.publishDate,\n          dateModified: dateModified,\n          author: {\n            '@type': 'Person',\n            name: siteMetadata.publisher,\n            url: siteMetadata.siteUrl,\n          },\n          publisher: {\n            '@type': 'Organization',\n            name: siteMetadata.publisher,\n            url: siteMetadata.siteUrl,\n            logo: {\n              '@type': 'ImageObject',\n              name: 'Loop Architectural Materials Logo',\n              width: `600`,\n              height: `60`,\n              url: `${siteMetadata.siteUrl}${siteMetadata.shareImage}`,\n            },\n          },\n          description: postNode.description.childMarkdownRemark.html,\n        }\n      )\n    }\n\n    // Page SEO Schema\n    if (pageSEO) {\n      schemaOrgJSONLD.push({\n        '@context': 'http://schema.org',\n        '@type': 'WebPage',\n        url: pageUrl,\n        name: title,\n        description: description,\n      })\n    }\n\n    if (products) {\n      products.forEach((edge) => {\n        const product = edge.node\n        schemaOrgJSONLD.push({\n          '@context': 'http://schema.org',\n          '@type': 'Product',\n          name: product.title,\n          image: [`https:${product.productImage.file.url}`],\n          description: `${\n            product.description\n              ? product.description.childMarkdownRemark.html\n              : ''\n          } - Inquire for pricing`,\n          sku: `${product.contentful_id}`,\n          mpn: `${product.contentful_id}`,\n          review: {\n            '@type': 'Review',\n            reviewRating: {\n              '@type': 'Rating',\n              ratingValue: '5',\n              bestRating: '5',\n            },\n            author: {\n              '@type': 'Person',\n              name: siteMetadata.publisher,\n              url: siteMetadata.siteUrl,\n            },\n          },\n          aggregateRating: {\n            '@type': 'AggregateRating',\n            ratingValue: '5',\n            reviewCount: '1',\n          },\n          brand: {\n            '@type': 'Brand',\n            name: postNode.title,\n            logo: `https:${postNode.heroImage.fixed.src}`,\n          },\n          offers: {\n            '@type': 'Offer',\n            price: '0.00',\n            priceCurrency: 'USD',\n            priceValidUntil: '2020-01-01',\n            availability: 'InStock',\n            url: `${pageUrl}`,\n          },\n        })\n      })\n    }\n\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"keywords\" content={keywords.join(',')} />\n        <meta name=\"image\" content={image} />\n        <meta name=\"description\" content={description} />\n        <meta name=\"application-name\" content=\"Loop Architectural Materials\" />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        <script\n          async\n          src=\"https://chimpstatic.com/mcjs-connected/js/users/6236ae131b11b8506326eed86/943d564cd0b36996e264a468a.js\"\n        ></script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:title\" content={title} />\n        {postSEO ? (\n          <meta property=\"og:type\" content=\"article\" />\n        ) : (\n          <meta property=\"og:type\" content=\"article\" />\n        )}\n        <meta\n          property=\"article:author\"\n          content=\"Loop Architectural Materials\"\n        />\n        <meta\n          property=\"article:published_time\"\n          content={postNode.publishDate}\n        />\n        <meta property=\"og:url\" content={pageUrl} />\n        <meta property=\"og:image\" content={image} />\n        <meta property=\"og:image:width\" content={imgWidth} />\n        <meta property=\"og:image:height\" content={imgHeight} />\n        <meta property=\"og:description\" content={description} />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={siteMetadata.userTwitter ? siteMetadata.userTwitter : ''}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:image\" content={image} />\n        <meta name=\"twitter:description\" content={description} />\n      </Helmet>\n    )\n  }\n}\n\nexport default SEO\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nclass GoogleMap extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render() {\n    const LOOPARCH_MAPS_KEY = this.props.API_KEY\n\n    return (\n      <section className=\"\">\n        <Helmet>\n          <script type=\"text/javascript\">\n            {`\n            const looparch = {lat: 33.484319, lng: -112.047970};\n            const looparchPlaceID = 'ChIJu8uonngSK4cRyrk911TEaok';\n            let map\n            let marker\n            let infowindow\n            let service\n\n            function initMap() {\n              map = new google.maps.Map(document.getElementById('map'), {\n                center: looparch,\n                zoom: 10\n              });\n\n              infowindow = new google.maps.InfoWindow()\n              service = new google.maps.places.PlacesService(map)\n\n              service.getDetails({\n                placeId: looparchPlaceID\n              }, (place, status) => {\n                if (status === google.maps.places.PlacesServiceStatus.OK) {\n                  marker = new google.maps.Marker({\n                    map: map,\n                    position: place.geometry.location,\n                    animation: google.maps.Animation.DROP,\n                  });\n                  google.maps.event.addListener(marker, 'click', function() {\n                    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' +\n                      place.formatted_address + '</div>');\n                    infowindow.open(map, this);\n                  });\n                }\n              })\n            }`}\n          </script>\n          <script\n            src={`https://maps.googleapis.com/maps/api/js?key=${LOOPARCH_MAPS_KEY}&libraries=places&callback=initMap`}\n            async\n            defer\n          />\n        </Helmet>\n        <div className=\"\">\n          <div\n            id=\"map\"\n            css={{\n              display: 'block',\n              height: '20rem',\n            }}\n          />\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default GoogleMap\n"],"sourceRoot":""}