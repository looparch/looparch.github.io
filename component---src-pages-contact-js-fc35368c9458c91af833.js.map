{"version":3,"sources":["webpack://loop-gatsby/./src/components/GoogleMap/GoogleMap.js","webpack://loop-gatsby/./src/components/GoogleMap/index.js","webpack://loop-gatsby/./src/pages/contact.js"],"names":["GoogleMap","props","state","render","LOOPARCH_MAPS_KEY","this","API_KEY","Helmet","type","src","async","defer","id","style","display","height","React","defaultProps","displayMap","componentDidMount","setState","siteMetadata","data","site","siteTitle","title","manufacturers","allContentfulManufacturer","edges","Layout","className","Seo","pagePath","postNode","description","internal","content","pageSEO","location","mapKey","PLACE_ID","placeId","FormContact","section","recaptchaKey"],"mappings":"wMAKMA,E,YACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,GAFI,E,+BAKnBC,OAAA,WACE,IAAMC,EAAoBC,KAAKJ,MAAMK,QAErC,OACE,gCACE,gBAACC,EAAA,EAAD,KACE,0BAAQC,KAAK,mBAAb,+yCAoCA,0BACEC,IAAG,+CAAiDL,EAAjD,qCACHM,OAAK,EACLC,OAAK,KAGT,2BACE,uBACEC,GAAG,MACHC,MAAO,CACLC,QAAS,QACTC,OAAQ,c,GA3DEC,aAwExBhB,EAAUiB,aAAe,CACvBX,QAAS,MAGX,IC/EA,ED+EA,E,oBEOA,E,YA9EE,WAAYL,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CACXgB,YAAY,GAHG,G,uCAOnBC,kBAAA,WACEd,KAAKe,SAAS,CAAEF,YAAY,K,EAG9Bf,OAAA,WACE,IAAMkB,EAAehB,KAAKJ,MAAMqB,KAAKC,KAAKF,aACpCG,EAAYH,EAAaI,MACzBC,EAAgBrB,KAAKJ,MAAMqB,KAAKK,2BAA6B,CACjEC,MAAO,IAWT,OACE,gBAACC,EAAA,EAAD,KACE,uBAAKC,UAAU,mBACb,gBAACvB,EAAA,EAAD,CAAQkB,MAAUD,EAAL,kBACb,gBAACO,EAAA,EAAD,CACEC,SAAQ,UACRC,SAfS,CACfR,MAAO,aACPS,YAAa,CACXC,SAAU,CACRC,QAAS,qCAYPC,SAAO,EACPhB,aAAchB,KAAKJ,MAAMqB,KAAKC,KAAKF,aACnCiB,SAAUjC,KAAKJ,MAAMqC,WAEvB,gBAAC,EAAD,CACEhC,QAASD,KAAKJ,MAAMqB,KAAKC,KAAKF,aAAakB,OAC3CC,SAAUnC,KAAKJ,MAAMqB,KAAKC,KAAKF,aAAaoB,QAC5CtC,OAAQE,KAAKH,MAAMgB,aAErB,2BAASY,UAAU,WACjB,uBAAKA,UAAU,aACb,sBAAIA,UAAU,mBAAd,gBACA,uBAAKA,UAAU,WACb,uBAAKA,UAAU,wBACb,gBAACY,EAAA,EAAD,CACEC,QAAQ,aACRjB,cAAeA,EACfkB,aAAcvB,EAAauB,gBAG/B,uBAAKd,UAAU,UACb,uBAAKA,UAAU,WACb,8MAMA,qDACA,yBACE,gEADF,IACkD,2BADlD,uBAEsB,2BAFtB,6B,GA/DMd","file":"component---src-pages-contact-js-fc35368c9458c91af833.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Helmet } from 'react-helmet'\n\nclass GoogleMap extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render() {\n    const LOOPARCH_MAPS_KEY = this.props.API_KEY\n\n    return (\n      <>\n        <Helmet>\n          <script type=\"text/javascript\">\n            {`\n            const looparch = {lat: 33.484319, lng: -112.047970};\n            const looparchPlaceID = 'ChIJu8uonngSK4cRyrk911TEaok';\n            let map\n            let marker\n            let infowindow\n            let service\n\n            function initMap() {\n              map = new google.maps.Map(document.getElementById('map'), {\n                center: looparch,\n                zoom: 10\n              });\n\n              infowindow = new google.maps.InfoWindow()\n              service = new google.maps.places.PlacesService(map)\n\n              service.getDetails({\n                placeId: looparchPlaceID\n              }, (place, status) => {\n                if (status === google.maps.places.PlacesServiceStatus.OK) {\n                  marker = new google.maps.Marker({\n                    map: map,\n                    position: place.geometry.location,\n                    animation: google.maps.Animation.DROP,\n                  });\n                  google.maps.event.addListener(marker, 'click', function() {\n                    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' +\n                      place.formatted_address + '</div>');\n                    infowindow.open(map, this);\n                  });\n                }\n              })\n            }`}\n          </script>\n          <script\n            src={`https://maps.googleapis.com/maps/api/js?key=${LOOPARCH_MAPS_KEY}&libraries=places&callback=initMap`}\n            async\n            defer\n          />\n        </Helmet>\n        <div>\n          <div\n            id=\"map\"\n            style={{\n              display: 'block',\n              height: '20rem',\n            }}\n          />\n        </div>\n      </>\n    )\n  }\n}\n\nGoogleMap.propTypes = {\n  'API_KEY': PropTypes.string.isRequired,\n}\n\nGoogleMap.defaultProps = {\n  API_KEY: null,\n}\n\nexport default GoogleMap\n","import GoogleMap from \"./GoogleMap\"\n\nexport default GoogleMap\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport GoogleMap from '../components/GoogleMap'\nimport FormContact from '../components/FormContact'\nimport Seo from '../components/Seo'\n\nclass ContactPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      displayMap: false,\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ displayMap: true })\n  }\n\n  render() {\n    const siteMetadata = this.props.data.site.siteMetadata\n    const siteTitle = siteMetadata.title\n    const manufacturers = this.props.data.allContentfulManufacturer || {\n      edges: [],\n    }\n    const postNode = {\n      title: 'Contact Us',\n      description: {\n        internal: {\n          content: 'We would love to hear from you.',\n        },\n      },\n    }\n\n    return (\n      <Layout>\n        <div className=\"content-section\">\n          <Helmet title={`${siteTitle} | Contact Us`} />\n          <Seo\n            pagePath={`contact`}\n            postNode={postNode}\n            pageSEO\n            siteMetadata={this.props.data.site.siteMetadata}\n            location={this.props.location}\n          />\n          <GoogleMap\n            API_KEY={this.props.data.site.siteMetadata.mapKey}\n            PLACE_ID={this.props.data.site.siteMetadata.placeId}\n            render={this.state.displayMap}\n          />\n          <section className=\"section\">\n            <div className=\"container\">\n              <h1 className=\"title is-size-4\"> Contact Us </h1>\n              <div className=\"columns\">\n                <div className=\"column is-two-thirds\">\n                  <FormContact\n                    section=\"Contact Us\"\n                    manufacturers={manufacturers}\n                    recaptchaKey={siteMetadata.recaptchaKey}\n                  />\n                </div>\n                <div className=\"column\">\n                  <div className=\"content\">\n                    <p>\n                      We’d love to hear from you. If you’re interested in\n                      receiving samples, scheduling a presentation or talking to\n                      us about any of our product lines, feel free to fill out\n                      the form.\n                    </p>\n                    <p>Our showroom address is:</p>\n                    <p>\n                      <strong> Loop Architectural Materials </strong> <br />\n                      3110 N 16 th Street <br />\n                      Phoenix, AZ 85016\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default ContactPage\n\nexport const pageQuery = graphql`\n  query ContactQuery {\n    allContentfulManufacturer(sort: { fields: [title] }) {\n      edges {\n        node {\n          id\n          title\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        description\n        mapKey\n        placeId\n        publisher\n        recaptchaKey\n        shareImage\n        shareImageHeight\n        shareImageWidth\n        siteUrl\n        title\n        userTwitter\n      }\n    }\n  }\n`\n"],"sourceRoot":""}